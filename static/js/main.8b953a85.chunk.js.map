{"version":3,"sources":["constants/ActionsTypes.js","reducers/sections.js","reducers/data.js","reducers/projects.js","reducers/index.js","store/configureStore.js","libs/animateNode.js","components/Loader.js","libs/morphCloud.js","libs/useragent.js","libs/cloudViewer.js","components/Home.js","components/Logo.js","components/Burger.js","components/Thanks.js","components/About.js","components/Pagination.js","components/Projects.js","components/App.js","constants/Api.js","containers/AppContainer.js","actions/SectionsActions.js","actions/DataActions.js","libs/callApi.js","actions/ProjectsActions.js","index.js"],"names":["ActionsTypes","initialState","currentSection","sections","state","arguments","length","undefined","action","type","ActionTypes","Object","objectSpread","section","data","loading","active","error","payload","activeSlide","projects","project","slide","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","animate","elements","cb","notDelete","forEach","item","element","animationName","callback","node","handleAnimationEnd","classList","remove","add","addEventListener","setTimeout","animateNode","dataset","animation","_loader","MorphCloudShader","config","classCallCheck","this","onBeforeRenderConfig","shaderForMaterial","shaderMaterial","meshMaterial","shaderGeometry","shaderMesh","shaderMesh2","camera","raycaster","THREE","mouseXY","mouseLastUpdate","Date","now","mouseStandByAction","mouseStandByPosition","mouseOldestPosition","mouseHistory","mouseHistoryMax","i","push","animationFuntction","init","_this","pathCount","uniforms","eye","value","raycastPoint","raycastedPoints","sunDirection","maxDistance","pointSize","timeScaleFactor","uvScaleFactor","sizeFactor","alpha","lines","time","size","textureMatrix","vertexShader","concat","fragmentShader","MorphCloud","transparent","side","verticesForBuffer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","vertices","Symbol","iterator","next","done","nextVert","x","y","z","err","return","resultVertices","Float32Array","addAttribute","console","log","initAnimationProperties","onBeforeRender","renderer","scene","geometry","material","group","position","clone","needsUpdate","_this2","useUpdateMouseAction","parent","dispose","setFromCamera","intersectObject","nextMouseNormal","copy","test","shift","useragent","phone","navigator","userAgent","platform","CloudViewer","onLoad","color","initialModels","activeProject","cameraPositionZ","minimalNormalSize","sceneElement","MainScene","offsetWidth","offsetHeight","set","setColor","cameraHolder","setPixelRatio","window","devicePixelRatio","appendChild","domElement","setSize","mouseNormal","render","MeshControllers","enabled","initMouse","loadModel","initResizer","aspect","updateProjectionMatrix","currentMin","Math","min","setClearColor","model","clearAllMeshControllers","Promise","resolve","reject","obj_loader","OBJLoader","load","object","defaultCenter","fromArray","boundingSphere","expandByObject","getBoundingSphere","targetRadiusAspect","radius","targetCenterOffset","sub","center","traverse","nextObject","isMesh","nextGeometry","fromBufferGeometry","nextVer","multiplyScalar","DEFAULT_RADIUS_ASPECT","initShader","modelGeometry","ShadedMeshController","rotateX","PI","isMobile","deviceOrientControll","DeviceOrientationControls","defaultQ","quaternion","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","MainMesh","update","slerp","updateMouseNormal","toSinFunc","offset","sin","translateFactor","rotation","_this3","requestAnimationFrame","renderAction","_this4","document","body","e","mp","pageX","pageY","wp","w","h","currentMouseNormal","Home","props","possibleConstructorReturn","getPrototypeOf","call","_this$props","viewer","_canvas","_this$props2","setSection","react_default","a","createElement","className","style","backgroundColor","ref","id","data-animation","onClick","href","links","email","mobile","PureComponent","Logo","Burger","closed","toggle","setState","prevState","scrollTo","index","scrollToProject","setProject","projectsData","Fragment","map","key","title","Thanks","_Component","_getPrototypeOf2","_len","args","Array","_key","apply","inherits","createClass","subtitle","Component","About","_ref","text","column1","paragraphs","target","rel","cvLink","column2","Pagination","_PureComponent","toConsumableArray","_","Projects","blockScroll","openedImage","canvases","images","setViewer","events","loader","_this$props3","isSectionActive","setCurrentSlide","slidesLength","true","_element","data-slides","backgroundImage","background","description","src","alt","Loader","loaded","unMount","App","contentLoaded","blockSlider","homeLoaded","toggleLoader","open","goToSection","bind","assertThisInitialized","goToSlide","goToProject","unMountLoader","scroll","fullpageApi","fetchData","_goToSection","asyncToGenerator","regenerator_default","mark","_callee","_args","wrap","_context","prev","setCurrentSection","moveTo","stop","_x","origin","destination","direction","projectLength","moveSlideLeft","moveSlideRight","res","_this$state","components_Loader","components_Logo","components_Burger","components_Pagination","react_fullpage_default","scrollOverflow","scrollHorizontally","onLeave","onSlideLeave","isLast","isFirst","_ref2","Home_Home","home","components_Projects","components_About","about","components_Thanks","last","Api","connect","dispatch","fetch","callApi","then","response","ok","json","catch","sent","setCurrentProject","ReactDOM","es","AppContainer","getElementById"],"mappings":"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","file":"static/js/main.8b953a85.chunk.js","sourcesContent":["const FETCH_DATA_REQUEST = 'FETCH_DATA_REQUEST'\nconst FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCESS'\nconst FETCH_DATA_FAIL = 'FETCH_DATA_FAIL'\n\nconst SET_SECTION = 'SET_SECTION'\n\nconst SET_PROJECT = 'SET_DATA'\nconst SET_PROJECT_SLIDE = 'SET_PROJECT_SLIDE'\n\nexport default {\n  SET_SECTION,\n  SET_PROJECT,\n  FETCH_DATA_REQUEST,\n  FETCH_DATA_FAIL,\n  FETCH_DATA_SUCCESS,\n  SET_PROJECT_SLIDE\n}","import ActionTypes from '../constants/ActionsTypes'\n\nconst initialState = {\n  currentSection: 1\n}\n\nconst sections = (state = initialState, action) => {\n    switch(action.type) {\n        case ActionTypes.SET_SECTION:\n          return {\n            ...state,\n            currentSection: action.section\n          }\n          default:\n            return state\n    }\n}\n\nexport default sections","import ActionTypes from '../constants/ActionsTypes'\n\nconst initialState = {\n  data: null,\n  loading: false,\n  active: null,\n  error: null\n}\n\nconst data = (state = initialState, action) => {\n    switch(action.type) {\n      case ActionTypes.FETCH_DATA_REQUEST:\n        return {\n          ...state,\n          loading: true,\n          error: null,\n          data: null,\n        }\n      case ActionTypes.FETCH_DATA_SUCCESS: {\n        return {\n          ...state,\n          loading: false,\n          error: false,\n          data: action.payload.data\n        }\n      }\n      case ActionTypes.FETCH_DATA_FAIL:\n        return {\n          ...state,\n          loading: false,\n          error: action.payload.error,\n          data: null\n        }\n        default:\n          return state\n    }\n}\n\nexport default data","import ActionTypes from '../constants/ActionsTypes'\n\nconst initialState = {\n  active: 0,\n  activeSlide: 0\n}\n\nconst projects = (state = initialState, action) => {\n    switch(action.type) {\n        case ActionTypes.SET_PROJECT:\n          return {\n            ...state,\n            active: action.project,\n            activeSlide: 0\n          }\n\n        case ActionTypes.SET_PROJECT_SLIDE:\n          return {\n            ...state,\n            activeSlide: action.slide\n          }\n          \n        default:\n          return state\n    }\n}\n\nexport default projects","import { combineReducers } from 'redux';\nimport sections from './sections';\nimport data from './data';\nimport projects from './projects';\n\nconst rootReducer = combineReducers({\n  sections,\n  data,\n  projects  \n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './../reducers';\nimport thunkMiddleware from 'redux-thunk';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n\nexport default store","export default function animateNode(element, animationName, callback, notDelete) {\n  const node = element\n  node.classList.add('animated', animationName)\n\n  function handleAnimationEnd() {\n      !notDelete && node.classList.remove('animated')\n      !notDelete && node.classList.remove(animationName)\n\n      if (typeof callback === 'function') callback()\n  }\n\n  //lol iOs :c \n  node.addEventListener('animationend', () => handleAnimationEnd(), false)\n  node.addEventListener('webkitAnimationEnd', () => handleAnimationEnd(), false)\n  node.addEventListener('webkitanimationend', () => handleAnimationEnd(), false)\n  node.addEventListener('animationend', () => handleAnimationEnd(), false)\n  node.addEventListener('animationiteration', () => setTimeout(() => handleAnimationEnd(), 500),false)\n\n}\n\nexport function animate(active, elements, cb, notDelete) {\n  if(active) \n    elements.forEach(item => {\n      if(item) animateNode(item, item.dataset.animation, cb, notDelete)\n    })\n}","import React from 'react'\nimport { animate } from '../libs/animateNode';\n\nlet _loader\n\nconst Loader = ({loaded, unMount}) => {\n  if(loaded) animate(loaded, [_loader], () => {\n    unMount()\n  })\n  \n  return (\n    <div className='loader' ref={node => _loader = node} data-animation='fadeOut'>\n      <div></div>\n    </div>\n  )\n}\n\nexport default Loader","import * as THREE from 'three';\n\nexport function MorphCloud( config ){\n\n    const pathCount = config.pathCount;\n\n    const ShaderParams = {\n\n        uniforms: {\n            'eye': { value: new THREE.Vector3() },\n            'raycastPoint': { value: new THREE.Vector3() },\n            'raycastedPoints': { value: [ new THREE.Vector3() ] },\n            'sunDirection': { value: new THREE.Vector3() },\n            'maxDistance': { value: 4.0 },\n            'pointSize': { value: 8.0 },\n            'timeScaleFactor': { value:  0.003 },\n            'uvScaleFactor': { value:  0.003 },\n            'sizeFactor': { value:  3.2 },\n            'alpha': { value: 0.2 },\n            'lines': { value: 20.0 },\n            'time': { value: 0.0 },\n            'size': { value: 122.3 },\n            'textureMatrix': { value: new THREE.Matrix4() },\n        },\n\n        vertexShader:\n            `\n            uniform float sizeFactor;\n            uniform float uvScaleFactor;\n            uniform float timeScaleFactor;\n            uniform float pointSize;\n            \n            uniform mat4 textureMatrix;\n            uniform float maxDistance;\n            uniform float time;\n            uniform float alpha;\n            uniform vec3 eye;\n            \n            varying vec4 worldPosition;\n            \n            varying vec2 vUv;\n            varying vec4 vColor;\n            varying float distanceToMouseAlpha;\n            varying float distanceToRaycastPoint;\n            \n            float PI = 3.141592653589793;\n            \n            uniform vec3 raycastPoint;\n            uniform vec3 raycastedPoints[ ${ pathCount } ];\n            const float pathCount = ${ pathCount }.0; \n            const int pathCountInt = ${ pathCount }; \n            \n            float distanceBetweenVec3( vec3 v1, vec3 v2 ){\n                float dx = v1.x - v2.x;\n                float dy = v1.y - v2.y;\n                float dz = v1.z - v2.z;\n                float result = sqrt( dx * dx + dy * dy + dz * dz );\n                return result;\n            }\n            \n            vec3 convertToNormal( vec3 src ){\n                return vec3( ( 0.5 - src.x ) * 2.0, ( 0.5 - src.y ) * 2.0, ( 0.5 - src.z ) * 2.0 );\n            }\n            \n            float getMod( float a, float b ) {\n                float result =  a - ( b * floor( a / b ) );\n                return result;\n            }\n            \n            vec4 getMixedColor( sampler2D tex1, sampler2D tex2, vec2 _uv ){\n                    vec4 mixedColor = ( texture2D( tex1, _uv ) + texture2D( tex2, _uv ) ) * 0.5;\n                    return mixedColor;\n            }\n            \n            \n            vec3 lt_ln_to_xyz( float lt, float ln, float radius ){\n                vec3 resultXYZ = vec3(\n                    radius * cos(lt) * cos(ln),\n                    radius * cos(lt) * sin(ln),\n                    radius * sin(lt)\n                );\n                return resultXYZ;\n            }\n            \n            vec2 xyz_to_lt_ln( vec3 pos ){\n                return vec2( \n                    acos( pos.y / sqrt( pos.x * pos.x + pos.z * pos.z) ), \n                    atan( pos.x / pos.z ) \n                );\n            }\n            \n            vec3 slerp(vec3 start, vec3 end, float t) {  \n                    // Dot product - the cosine of the angle between 2 vectors.  \n                    float dot = dot(start, end);\n                    // Clamp it to be in the range of Acos() \n                    // This may be unnecessary, but floating point  \n                    // precision can be a fickle mistress.    \n                    dot = clamp(dot, -1.0, 1.0);  \n                    // Acos(dot) returns the angle between start and end,   \n                    // And multiplying that by time returns the angle between   \n                    // start and the final result.   \n                    float theta = acos(dot) * t;\n                    vec3 RelativeVec = normalize(end - start * dot); \n                    return ((start * cos(theta)) + (RelativeVec * sin(theta)));\n            }\n            \n            vec3 aproximatedRaycastedPoint(){\n            \n                vec3 finalPoint = vec3( 0.0 );\n                \n                float floatIterator = 0.0;\n                float totalMultiplyFactor = 0.0;\n                \n                for( int i = 0; i < pathCountInt; i++ ){\n                    float nextMultiplyFactor = ( floatIterator / pathCount );\n                    totalMultiplyFactor += nextMultiplyFactor;\n                    finalPoint += raycastedPoints[ i ] * nextMultiplyFactor;\n                    floatIterator += 1.0;\n                }\n                finalPoint = finalPoint / totalMultiplyFactor;\n                return finalPoint;\n            }\n            \n            vec4 getNearestRaycastedPoint( vec3 position ){\n                vec4 finalPoint = vec4( 0.0 );\n                float lastDistance = 99999999999.0;\n                for( int i = 0; i < pathCountInt; i++ ){\n                    float nextDistance = distanceBetweenVec3( position.xyz , raycastedPoints[ i ] );\n                    if( nextDistance < lastDistance ){\n                        lastDistance = nextDistance;\n                        finalPoint =  vec4( raycastedPoints[ i ], abs( sin( float( i ) / pathCount * -PI / 2.0 ) ) );\n                    }\n                }\n                return finalPoint;\n            }\n            \n            vec2 getLatLngMod( float latFactor, float lngFactor ){\n                return vec2( getMod(  latFactor,  PI * 2.0  ), -PI/ 2.0 + sin( getMod( lngFactor,  PI  ) ) * PI  );\n            }\n            \n            void main() {\n            \n            \tvUv = uv;\n            \t\n                vec3 normaledEye = normalize( eye );\n            \t\n            \tvec4 pixelPosition = modelMatrix * vec4( position, 1.0 );\n            \tvec4 mvStartPosition = pixelPosition;\n            \tworldPosition = pixelPosition;\n            \t\n            \tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n            \tvec4 tempNearest = getNearestRaycastedPoint( pixelPosition.xyz );\n            \ttempNearest.x = -50.0 + 100.0 * sin( PI/2.0  * getMod( time * timeScaleFactor, 1.0 ) );\n            \tvec4 nearestRaycasted = vec4(\n            \t    tempNearest.x - pixelPosition.y,\n            \t    pixelPosition.y,\n            \t    0.0,\n            \t    0.001\n            \t);\n            \tvec3 _raycastPoint = nearestRaycasted.xyz;\n            \tvec3 flatPixelPosition = vec3( pixelPosition.xy, 0.0 );\n            \tdistanceToRaycastPoint = distanceBetweenVec3( flatPixelPosition.xyz , _raycastPoint );\n            \n                float distanceFactor;\n                vec4 finalGlPosition;\n            \n                float distanceAlpha = 1.0 - distanceToRaycastPoint / maxDistance;\n                distanceFactor = distanceAlpha;\n                distanceToMouseAlpha = distanceAlpha;\n                float timeScaleFactorAfter = timeScaleFactor * 0.7;\n                float pixelPScaleFactor = 0.2;\n                \n                float multiplyFactorForRaycastedPath = 1.0;\n                if( distanceFactor < 0.12 ){\n                    distanceFactor = 0.12;\n                    timeScaleFactorAfter = timeScaleFactor;\n                    pixelPScaleFactor = 0.2;\n                } else {\n                    distanceFactor = 0.12 + (distanceFactor - 0.12) * 0.3;\n                    timeScaleFactorAfter = timeScaleFactor;\n                    pixelPScaleFactor = 0.3;\n                }\n                \n                vec2 currentLtLn = xyz_to_lt_ln(  vec3( 1.0, 1.0, 0.0 ) );\n                \n                float ltFactor = ( position.x + position.z );\n                float lnFactor = ( position.z - position.y );\n                \n                currentLtLn = getLatLngMod(\n                    currentLtLn.x + ltFactor * pixelPScaleFactor + ( time * timeScaleFactorAfter * 0.5 ) * PI * 2.0,\n                    currentLtLn.y + lnFactor * pixelPScaleFactor + ( time * timeScaleFactorAfter ) *  PI\n                );\n                \n                vec3 positionOfLtLn_default = lt_ln_to_xyz( \n                    currentLtLn.x, \n                    currentLtLn.y, \n                    distanceFactor * 2.5 * multiplyFactorForRaycastedPath\n                );\n                \n                vec3 positionOfLtLn_for_pointer = lt_ln_to_xyz( \n                    currentLtLn.x, currentLtLn.y, \n                    distanceFactor * 2.5 * abs( sin( time * timeScaleFactor ) )\n                );\n                \n                vec3 positionOfLtLn;\n                \n                if( distanceFactor > 0.05 ){\n                    float clipFactor = 0.0;\n                    float softFactor = 0.35;\n                    float test1 = ( distanceFactor - clipFactor ) * softFactor;\n                    float test2 = 0.0;\n                    if( test1 > 0.0 ){  test2 = sin( ( test1 ) * 2.0 * PI / 2.0 ); }\n                    positionOfLtLn = slerp( positionOfLtLn_default, positionOfLtLn_default, test2 );\n                } else {\n                    positionOfLtLn = positionOfLtLn_default;\n                }\n                \n                pixelPosition.xyz += positionOfLtLn;\n                vec4 preGlPosition =  projectionMatrix * modelViewMatrix * pixelPosition;\n                finalGlPosition = preGlPosition;\n                    \n                gl_Position =  finalGlPosition;\n                vColor = normalize( finalGlPosition );\n                \n                if ( gl_Position.w > 0.0 ) {\n                    gl_PointSize = 12.0 * pointSize / gl_Position.w + ( pointSize * distanceFactor * 0.5 );\n                } else {\n                    gl_PointSize = 3.0;\n                }\n                \n            \t\n            \t\n            }\n        `,\n\n        fragmentShader: `\n            uniform float alpha;\n            uniform float lines;\n            uniform float time;\n            uniform float size;\n            uniform vec3 eye;\n            uniform vec3 sunDirection;\n            uniform float timeScaleFactor;\n\n            varying vec4 worldPosition;\n            varying vec2 vUv;\n            varying vec4 vColor;\n            varying float distanceToMouseAlpha;\n            varying float distanceToRaycastPoint;\n            \n           \n            const float gridSize = 3.0;\n            const float pixelsPerUnit = 32.0;\n            const vec2 resolution = vec2( 1024.0, 1024.0 );\n            \n            const vec3 tinLineColor = vec3( 1.0, 1.0, 1.0 );\n            const vec3 wideLineColor = vec3( 1.0, 1.0, 0.6 );\n            \n            const float tinLineWidth = 32.0;\n            const float wideLineWidth = 12.0;\n            \n            const float tinLineOpacity = 1.0;\n            const float wideLineOpacity = 1.0;\n            \n            float PI = 3.141592653589793;\n     \n            float getTimeLineWidthScale(){\n                // return ( tinLineWidth / 2.0 ) + abs( sin( time * 0.13 ) * tinLineWidth );\n                return tinLineWidth;\n            }\n     \n            float getMod( float a, float b ) {\n                float result =  a - ( b * floor( a / b ) );\n                return result;\n            }\n            \n            bool checkIsLine(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n            \n                bool lineAvailableX = gridAlphaModLeft.x < lineAlphaSize.x;\n                // bool lineAvailableX = false;\n                bool lineAvailableY = false;\n                // bool lineAvailableY = gridAlphaModLeft.y < lineAlphaSize.y;\n            \n                return lineAvailableX || lineAvailableY || false;\n            }\n            \n            bool checkIsLine2(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n            \n                bool lineAvailableX = gridAlphaModLeft.x < lineAlphaSize.x;\n                bool lineAvailableY = gridAlphaModLeft.y < lineAlphaSize.y;\n            \n                return lineAvailableX || lineAvailableY || false;\n            }\n            \n            bool checkIsPoint(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n            \n                bool lineAvailableX = gridAlphaModLeft.x < lineAlphaSize.x;\n                bool lineAvailableY = gridAlphaModLeft.y < lineAlphaSize.y;\n            \n                return  ( lineAvailableX && lineAvailableY ) || false;\n            }\n            \n            float checkLineOpacityByX(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n                \n                float nextOpacity = sin( gridAlphaModLeft.x / lineAlphaSize.x * 3.14 );\n                return nextOpacity;\n            }\n            \n            bool checkIsCenter(){\n            \n                bool isCenterX = abs(\n                   ( vUv.x * resolution.x * pixelsPerUnit ) - ( 0.5 * resolution.x * pixelsPerUnit )\n                ) < ( wideLineWidth * .5 );\n            \n                bool isCenterY = abs(\n                    ( vUv.y * resolution.y * pixelsPerUnit ) - ( 0.5 * resolution.y * pixelsPerUnit )\n                ) < ( wideLineWidth * .5 );\n            \n                if( isCenterX ){\n                    return true;\n                } else if( isCenterY ) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n     \n            vec4 getMixedColor( sampler2D tex1, sampler2D tex2, vec2 _uv ){\n                    vec4 mixedColor = ( texture2D( tex1, _uv ) + texture2D( tex2, _uv ) ) * 0.5;\n                    return mixedColor;\n            }\n            \n            highp float distanceBetween( vec2 vector1, vec2 vector2 ){\n                float xLength = vector1.x - vector2.x;\n                float yLength = vector1.y - vector2.y;\n                return sqrt( xLength * xLength + yLength * yLength );\n            }\n            \n            float distanceToLine(vec2 p1, vec2 p2, vec2 point) {\n                float a = p1.y-p2.y;\n                float b = p2.x-p1.x;\n                return abs(a*point.x+b*point.y+p1.x*p2.y-p2.x*p1.y) / sqrt(a*a+b*b);\n            }\n            \n            float drawLine(vec2 p1, vec2 p2) {\n            \n              vec2 resolution = vec2( 1024., 1024. );\n              float Thickness = 15.0;\n              \n              vec2 uv = gl_FragCoord.xy / resolution.xy;\n            \n              float a = abs(distanceBetween(p1, uv));\n              float b = abs(distanceBetween(p2, uv));\n              float c = abs(distanceBetween(p1, p2));\n            \n              if ( a >= c || b >=  c ) return 0.0;\n            \n              float p = (a + b + c) * 0.5;\n            \n              // median to (p1, p2) vector\n              float h = 2. / c * sqrt( p * ( p - a) * ( p - b) * ( p - c));\n            \n              return mix( 1.0, .0, smoothstep( 0.5 * Thickness, 1.5 * Thickness, h ) );\n            }\n            \n            void main() {\n            \n                vec2 pc = ( gl_PointCoord - 0.5 ) * 2.0;\n                vec4 color1 = vColor;\n                \n                float r = 0.0, delta = 0.0, alpha = 1.0;\n                vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n                r = dot(cxy, cxy);\n                if ( r > 1.0 ) { discard; }\n            \n                color1.xyz = vec3( 0.7 );\n                \n                // float transparentFactor = 1. - r;\n                float transparentFactor = 1.;\n                color1.a = transparentFactor;\n                color1.xyz *= 0.9 + 0.1 * r;\n                \n                if( distanceToMouseAlpha < 0.0 ){\n                    gl_FragColor = color1;\n                } else {\n                    gl_FragColor = color1;\n                }\n\n                // gl_FragColor = vec4( 1.0 ); \n            }\n        `\n\n    };\n\n    return ShaderParams;\n\n}\n\nexport default class MorphCloudShader {\n\n    constructor( config ){\n        this.config = config;\n\n        this.onBeforeRenderConfig = {};\n\n        this.shaderForMaterial = null;\n        this.shaderMaterial = null;\n        this.meshMaterial = [];\n        this.shaderGeometry = null;\n        this.shaderMesh = null;\n        this.shaderMesh2 = null;\n        this.camera = null;\n        this.raycaster = new THREE.Raycaster();\n        this.mouseXY = new THREE.Vector2();\n\n        this.mouseLastUpdate = Date.now();\n        this.mouseStandByAction = false;\n        this.mouseStandByPosition = false;\n\n        this.mouseOldestPosition = new THREE.Vector2();\n        this.mouseHistory = [];\n        this.mouseHistoryMax = 12;\n        for( let i = 0; i < this.mouseHistoryMax; i++ ){ this.mouseHistory.push( new THREE.Vector2() ) }\n\n        this.animationFuntction = () => {};\n\n        this.init();\n    }\n\n    init(){\n\n        this.shaderForMaterial = MorphCloud( {\n            pathCount: this.config.pathCount\n        } );\n        // this.shaderForMaterial2 = MorphCloudLines( {\n        //     pathCount: this.config.pathCount\n        // } );\n\n        this.shaderForMaterial.uniforms.lines.value = 3;\n        this.shaderForMaterial.uniforms.time.value = 0;\n        this.shaderForMaterial.uniforms.timeScaleFactor.value = 0.003;\n\n        let raycastedPoints = [];\n        for( let i = 0; i < this.config.pathCount; i++  ){ raycastedPoints.push( new THREE.Vector3() ); }\n        this.shaderForMaterial.uniforms.raycastedPoints.value = raycastedPoints;\n\n        this.shaderMaterial = new THREE.ShaderMaterial( {\n            uniforms: this.shaderForMaterial.uniforms,\n            vertexShader: this.shaderForMaterial.vertexShader,\n            fragmentShader: this.shaderForMaterial.fragmentShader,\n            transparent: true,\n            side: THREE.BackSide\n        } );\n        // this.shaderMaterial2 = new THREE.ShaderMaterial( {\n        //     uniforms: this.shaderForMaterial2.uniforms,\n        //     vertexShader: this.shaderForMaterial2.vertexShader,\n        //     fragmentShader: this.shaderForMaterial2.fragmentShader,\n        //     transparent: true,\n        //     wireframe: true,\n        //     side: THREE.DoubleSide\n        // } );\n\n        this.shaderGeometry = new THREE.BufferGeometry();\n        \n        const verticesForBuffer = [];\n        for ( const nextVert of this.config.vertices ) {\n            verticesForBuffer.push( nextVert.x );\n            verticesForBuffer.push( nextVert.y );\n            verticesForBuffer.push( nextVert.z );\n        }\n        const resultVertices = new Float32Array( verticesForBuffer );\n        this.shaderGeometry.addAttribute( 'position', new THREE.BufferAttribute( resultVertices, 3 ) );\n\n\n        this.shaderMesh = new THREE.Points( this.shaderGeometry,  this.shaderMaterial );\n        // this.shaderMesh2 = new THREE.Mesh( this.shaderGeometry,  this.shaderMaterial2 );\n        // this.shaderMesh.add( this.shaderMesh2 );\n\n        console.log( this );\n\n        this.initAnimationProperties();\n\n        this.shaderMesh.onBeforeRender = ( renderer, scene, camera, geometry, material, group ) => {\n            if( this.config.onBeforeRender ){\n                this.config.onBeforeRender( renderer, scene, camera, geometry, material, group );\n            }\n            this.onBeforeRenderConfig = { renderer, scene, camera, geometry, material, group };\n\n        }\n\n    }\n\n    animate(){\n        if( this.onBeforeRenderConfig.camera ){\n\n\n            this.camera = this.onBeforeRenderConfig.camera;\n            this.animationFuntction();\n            this.shaderMaterial.uniforms[ 'eye' ].value = this.camera.position.clone();\n            this.shaderMaterial.uniforms[ 'time' ].value += 1;\n            // this.shaderMaterial2.uniforms[ 'eye' ].value = this.camera.position.clone();\n            // this.shaderMaterial2.uniforms[ 'time' ].value += 1;\n            this.shaderMaterial.needsUpdate = true;\n        }\n    }\n\n    initAnimationProperties(){\n\n        let raycastedPoints = [];\n        for( let i = 0; i < this.config.pathCount; i++  ){ raycastedPoints.push( new THREE.Vector3() ); }\n        this.shaderMaterial.uniforms[ 'raycastedPoints' ].value = raycastedPoints;\n\n        this.animationFuntction = () => {\n\n            if( Date.now() > this.mouseLastUpdate + 3300 ){ this.mouseStandByAction = true; }\n\n            if( this.mouseStandByAction ){\n                this.mouseStandByPosition = this.mouseStandByPosition + 1 < this.mouseHistoryMax ? this.mouseStandByPosition + 1 : 0;\n                this.useUpdateMouseAction( this.mouseHistory[ this.mouseStandByPosition ] );\n            }\n\n        };\n\n    }\n\n    remove(){\n        this.shaderMesh.parent.remove( this.shaderMesh );\n        this.shaderMesh.geometry.dispose();\n        this.shaderMesh.material.dispose();\n        this.shaderMaterial.dispose();\n        this.shaderGeometry.dispose();\n        this.shaderMaterial = null;\n        this.shaderGeometry = null;\n    }\n\n    raycastModel(){\n        this.raycaster.setFromCamera( this.mouseXY, this.camera );\n        return this.raycaster.intersectObject( this.shaderMesh );\n    }\n\n    useUpdateMouseAction( nextMouseNormal ){\n        this.mouseXY.copy( nextMouseNormal );\n    }\n\n    updateMouseNormal( nextMouseNormal ){\n\n        this.mouseLastUpdate = Date.now();\n        this.mouseStandByAction = false;\n        this.mouseStandByPosition = 0;\n\n        this.mouseHistory.push( nextMouseNormal.clone() );\n\n        if( this.mouseHistory.length > this.mouseHistoryMax ){\n            let test = this.mouseHistory.shift();\n            this.mouseOldestPosition.copy( test );\n        }\n\n        this.useUpdateMouseAction( nextMouseNormal );\n    }\n\n}\n\n","export default () => {\n  const phone = /iPad|iPhone|iPod|android/i.test(navigator.userAgent || navigator.platform) \n\n  console.log(navigator.userAgent, navigator.platform, phone)\n\n  console.log(phone)\n\n  return phone\n}","import * as THREE from 'three';\n// import OrbitControlls from 'three-orbitcontrols';\nimport { OBJLoader } from 'three-obj-mtl-loader';\nimport MorphCloudShader from './morphCloud';\nimport DeviceOrientationControls from 'three-device-orientation'; \nimport isMobile from './useragent'\n\n\nexport default class CloudViewer {\n  constructor(element, onLoad, color, initialModels, activeProject, cameraPositionZ = 30) {\n    this.cameraPositionZ = cameraPositionZ;\n    this.minimalNormalSize = 400;\n    this.initialModels = initialModels;\n    this.sceneElement = element;\n    this.onLoad = onLoad;\n    this.activeProject = activeProject\n    \n    this.MainScene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(60, this.sceneElement.offsetWidth / this.sceneElement.offsetHeight , 0.1, 1000 );\n    \n    this.renderer = new THREE.WebGLRenderer({ alpha: !color });\n    this.camera.position.set(0, 0, cameraPositionZ);\n    // this.camera.position.multiplyScalar(0.4);\n\n    if ( color ) {\n      this.setColor(color);\n    }\n\n\n\n    this.cameraHolder = new THREE.Object3D();\n    this.cameraHolder.add( this.camera );\n\n    this.renderer.setPixelRatio( window.devicePixelRatio );\n\n    this.sceneElement.appendChild(this.renderer.domElement);\n    this.renderer.setSize(this.sceneElement.offsetWidth, this.sceneElement.offsetHeight);    \n\n    this.mouseNormal = new THREE.Vector2();\n\n    this.render();\n\n    this.MainScene.add(this.cameraHolder);\n\n    this.MeshControllers = [];\n\n\n    this.enabled = true;\n\n\n    this.initMouse();\n    this.loadModel(this.initialModels[0], onLoad);\n    this.initResizer();\n    \n    // let box = new THREE.Box3().setFromObject(myObject3D)\n    // let sphere = box.getBoundingSphere()\n    // let centerPoint = sphere.center\n  }\n\n  initResizer(){\n\n    window.addEventListener( 'resize', ()  => {\n      this.renderer.setSize(this.sceneElement.offsetWidth, this.sceneElement.offsetHeight );\n      this.camera.aspect = this.sceneElement.offsetWidth / this.sceneElement.offsetHeight;\n      this.camera.updateProjectionMatrix();\n\n      const currentMin = Math.min(this.sceneElement.offsetWidth, this.sceneElement.offsetHeight);\n      \n      if (currentMin < this.minimalNormalSize) {\n        this.camera.position.z = this.cameraPositionZ + this.cameraPositionZ * (1 - currentMin / this.minimalNormalSize); \n      }\n      \n    });\n\n  }\n\n  setColor(color) {\n    this.renderer.setClearColor( color );\n  }\n\n  loadModel(model, onLoad) {\n    this.clearAllMeshControllers()\n    return new Promise((resolve, reject) => {\n      this.obj_loader = new OBJLoader();\n        this.obj_loader.load( model, ( object ) => {\n          let vertices = [];\n\n          const DEFAULT_RADIUS_ASPECT = 22.465094820192128;\n          \n          const defaultCenter = new THREE.Vector3().fromArray(  [ 0, 0, 0 ] );\n          const boundingSphere = new THREE.Box3().expandByObject( object ).getBoundingSphere( new THREE.Sphere() );\n\n\n          const targetRadiusAspect = DEFAULT_RADIUS_ASPECT / boundingSphere.radius;\n          const targetCenterOffset = defaultCenter.sub( boundingSphere.center );\n\n          object.traverse( ( nextObject ) => {\n            if ( nextObject.isMesh ) {\n              if ( nextObject.geometry ) {\n                if ( nextObject.geometry.type === 'BufferGeometry' ) {\n                  let nextGeometry = new THREE.Geometry().fromBufferGeometry( nextObject.geometry );\n                  vertices = vertices.concat( nextGeometry.vertices );\n                }\n              }\n            }\n          });\n          for (const nextVer of vertices) {\n            nextVer.multiplyScalar( targetRadiusAspect );\n            nextVer.add( targetCenterOffset );\n            nextVer.y += DEFAULT_RADIUS_ASPECT/2;\n          }\n          this.initShader( vertices, onLoad );\n          \n          resolve( vertices );\n        });\n      }\n    )\n  }\n  \n  initShader( model, onLoad ) {\n    this.modelGeometry = model;\n    \n    const ShadedMeshController = new MorphCloudShader({\n      pathCount: 1,\n      vertices: this.modelGeometry\n    });\n\n    ShadedMeshController.shaderGeometry.rotateX( -Math.PI / 2);\n\n    this.MainScene.add( ShadedMeshController.shaderMesh );\n\n    if(isMobile()) ShadedMeshController.deviceOrientControll = new DeviceOrientationControls(new THREE.Object3D());\n    ShadedMeshController.defaultQ = ShadedMeshController.shaderMesh.quaternion.clone();\n    \n    this.MeshControllers.push( ShadedMeshController );\n\n    setTimeout(() => onLoad(true), 1000);\n  }\n\n  clearAllMeshControllers(){\n    for( const nextController of this.MeshControllers ){\n      nextController.remove();\n    }\n    this.MeshControllers = [];\n    this.modelGeometry = [];\n  }\n\n  renderAction() {\n\n    this.renderer.render( this.MainScene, this.camera );\n\n    for( const MainMesh of this.MeshControllers ) {\n        if(MainMesh.deviceOrientControll) {\n          \n          MainMesh.deviceOrientControll.update();\n          MainMesh.shaderMesh.quaternion.copy(MainMesh.defaultQ.clone().slerp(MainMesh.deviceOrientControll.object.quaternion.clone(), 0.15 )) \n\n        }\n        \n\n        MainMesh.updateMouseNormal( this.mouseNormal );\n        MainMesh.animate();\n        const toSinFunc = ( alpha, offset ) => Math.sin( Math.PI / 2 * ( alpha + offset ) )\n        const translateFactor = Math.PI / 2;\n        this.cameraHolder.rotation.x = -0.2 + toSinFunc( MainMesh.mouseOldestPosition.y, 0 ) * translateFactor * 0.05;\n        this.cameraHolder.rotation.y = -toSinFunc( MainMesh.mouseOldestPosition.x, 0 ) * translateFactor * 0.1;\n    }\n    // this.controls.update()\n\n  }\n\n  render() {\n    requestAnimationFrame(() => this.render());\n    if( this.enabled ){ this.renderAction(); }\n  }\n\n  initMouse() {\n    if(!isMobile()) {\n      document.body.addEventListener('mousemove', (e) => {\n        if( this.enabled ){\n          const mp = { x: e.pageX, y: e.pageY };\n          const wp = { w: this.sceneElement.offsetWidth, h: this.sceneElement.offsetHeight };\n          const currentMouseNormal = new THREE.Vector2( -1.0 + ( mp.x / wp.w * 2.0  ), 1.0 - ( mp.y / wp.h * 2.0 ) );\n            \n          this.mouseNormal.copy( currentMouseNormal );\n        }\n      });\n    }\n      \n    \n    window.addEventListener(\"deviceorientation\", (e) => {\n      if( this.enabled ){\n        // const gp = {\n        //   x: e.alpha,\n        //   y: e.beta\n        // }       \n\n        // const currentGyroNormal = new THREE.Vector2( gp.x / 180, -gp.y / 180 );\n\n        // this.mouseNormal.copy( currentGyroNormal )\n      }\n    }, false)\n  }\n\n}\n","import React, { PureComponent } from 'react'\nimport { animate } from './../libs/animateNode'\nimport CloudViewer from '../libs/cloudViewer';\n\nexport default class Home extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.elements = []\n  }\n\n  componentWillMount() {\n    const { data, onLoad } = this.props\n    \n    setTimeout(() => {\n      if(!this.viewer) this.viewer = new CloudViewer(this._canvas, () => onLoad(true), null, [data.model, data['model_small']])\n    }, 0);\n  }\n  \n  render() {\n    const { data, active, setSection } = this.props\n    animate(active, this.elements)\n    if (this.viewer) {\n      if (!active) {\n        this.viewer.enabled = false\n      } else {\n        this.viewer.enabled = true\n      }\n    }\n\n    return (\n      <div className='home fp-noscroll section'>\n        <div style={{ backgroundColor: data.color }} ref={node => this._canvas = node} id='homescene' className='scene'> </div>\n        <div ref={node => this.elements.push(node)} data-animation='fadeInRight' className='title'>\n          <div>\n            My name is <span onClick={() =>  setSection(3)}>Kuba</span>, <br/>I do cool sh*t & <br/> this is my <span onClick={() => setSection(2)}> book </span>\n          </div>\n        </div>\n        <div className='contacts'>\n          <div className='wrapper'>\n            <div className='email'>\n              <a className='fadeInUp' data-animation='fadeInUp' ref={node => this.elements.push(node)} href={`mailto:${data.links.email}`}> {data.links.email} </a>\n            </div>\n            <div className='phone'>\n              <a className='fadeInUp' data-animation='fadeInUp' ref={node => this.elements.push(node)}  href={`tel${data.links.mobile}`}> {data.links.mobile} </a>\n            </div>\n          </div>\n\n        </div>\n\n      </div>  \n    )\n  }\n}\n","import React from 'react'\n\nconst Logo = () => {\n  return (\n    <div className='animated fadeInLeft logo'>\n      \n    </div>\n  )\n}\n\nexport default Logo\n","import React, { PureComponent } from 'react'\n\nclass Burger extends PureComponent {\n  state = {\n    closed: true\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      closed: !prevState.closed\n    }))\n  }\n\n  scrollTo = index => {\n    this.toggle()\n    this.props.onClick(index)\n  }\n\n  scrollToProject = project => {\n    this.toggle()\n    this.props.onClick(2, false)\n    this.props.setProject(project)\n  }\n  \n  render() {\n    const { closed } = this.state\n    const { scrollTo, toggle, scrollToProject } = this\n    const { active, projects, projectsData } = this.props\n\n    return (\n      <>\n        <div className={`navbar ${closed ? 'closed' : ''}`}> \n          <div className='navbar-logo'> </div>\n          <div className='menu'> \n            <div className={`item ${active === 1 ? 'active' : '' }`} onClick={() => scrollTo(1)}> Start </div>\n            {\n              projectsData.map((item, i) => (\n                <div key={i} onClick={() => scrollToProject(i)} className={`item ${active === 2 && projects.active === i ? 'active' : ''}`}> {item.title} </div>\n              ))\n            }\n            <div className={`item ${active === 3? 'active' : ''}`} onClick={() => scrollTo(3)}> About me </div>\n          </div>\n        </div>\n          \n        <div onClick={toggle} className={`burger animated fadeInRight ${closed ? '' : 'active' }`}>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Burger\n","import React, { Component } from 'react'\nimport { animate } from '../libs/animateNode';\n\nexport class Thanks extends Component {\n  elements = []\n\n  render() {\n    const { data, active } = this.props\n    animate(active, this.elements)\n    \n    return (\n      <div className='thanks fp-noscroll section'>\n          <div className='title' ref={node => this.elements.push(node)} data-animation='fadeInRight'> {data.title} </div> \n          <div className='email' ref={node => this.elements.push(node)} data-animation='fadeInLeft'>\n            <a href={`mailto:${data.links.email} `}> {data.links.email} </a>\n          </div>\n          <div className='phone' ref={node => this.elements.push(node)} data-animation='fadeInRight'>\n            <a href={`tel:${data.links.mobile} `}> {data.links.mobile} </a>\n          </div>\n\n        <div className='footer'>\n          <div className='subtitle' ref={node => this.elements.push(node)} data-animation='flipInX'> {data.subtitle} </div>\n          <div className='contacts'>\n            <div className='back' ref={node => this.elements.push(node)} data-animation='fadeInUp' onClick={() => this.props.onClick()}> go back up </div>\n            </div>\n        </div>\n      </div>      \n    )\n  }\n}\n\nexport default Thanks\n","import React from 'react'\nimport { animate } from '../libs/animateNode';\n\nconst elements = []\n\nconst About = ({ data, active }) => {\n  animate(active, elements)\n  \n  return (\n    <div className='about section'>\n      <div className='wrapper'> \n        <div className='title' data-animation='fadeInRight' ref={node => elements.push(node)}> {data.title} </div>\n        <div className='subtitle' data-animation='fadeInRight'  ref={node => elements.push(node)}> {data.subtitle} </div>\n        <div className='description'> \n          <div className='item'>\n            <div className='description-title' data-animation='fadeInRight' ref={node => elements.push(node)}> {data.text.column1.title} </div>\n            <div className='text' data-animation='fadeInRight' ref={node => elements.push(node)}> \n              {\n                data.text.column1.paragraphs.map((item, key) => (\n                  <div key={key}> {item} </div>\n                ))\n              }\n            </div>\n            <div className='button' data-animation='fadeInRight' ref={node => elements.push(node)}>\n              <a target='_blank' rel='noopener noreferrer' href={data.cvLink}> Download full cv (pdf) </a>\n            </div>\n          </div>\n          <div className='item' >\n            <div className='description-title' data-animation='fadeInRight' ref={node => elements.push(node)}> {data.text.column2.title} </div>\n            <div className='text' data-animation='fadeInRight' ref={node => elements.push(node)}> \n              {\n                data.text.column2.paragraphs.map((item, key) => (\n                  <div key={key}> {item} </div>\n                ))\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import React, { PureComponent } from 'react'\n\nexport class Pagination extends PureComponent {\n  render() {\n    return (\n      <div className='pagination'>\n        {\n          [...Array(4)].map((_, i) =>  (\n            <div className={`item ${this.props.active === i + 1 ? 'active' : '' }`} key={i} onClick={() => this.props.onClick(i + 1)}> </div>\n          ))\n        } \n      </div>\n    )\n  }\n}\n\nexport default Pagination\n","import React, { Component } from 'react'\nimport CloudViewer from './../libs/cloudViewer.js'\n\nexport class Projects extends Component {\n  constructor(props) {\n    super(props)\n    this.canvases = []\n    this.images = []\n  }\n\n  state = {\n    blockScroll: false,\n    openedImage: null\n  }\n  \n  componentDidMount() {\n    this.setViewer()\n    this.events = 0\n  }\n\n  componentDidUpdate() {\n    const { active, activeSlide, data } = this.props\n\n    const isImage = data[active].images[activeSlide - 1]\n\n    if(!isImage & this.state.openedImage) {\n      this.setState({ openedImage: false })\n    }\n\n\n  }\n  \n  setViewer() {\n    const { data, active } = this.props\n\n    setTimeout(() => {\n      if(!this.viewer) this.viewer = new CloudViewer(this._canvas, () => this.setState({ loader: false }), data[active]['fist-slide-color'], [data[0].model], active)\n    }, 0)\n  }\n\n  render() {\n    const { isSectionActive, active, activeSlide, setCurrentSlide, data, onLoad } = this.props\n    const { openedImage } = this.state\n\n    const activeProject = data[active]\n    this.slidesLength = activeProject.images.length + 1\n    \n    if (this.viewer) {\n      if (this.viewer.activeProject !== active) {\n        this.viewer.activeProject = active\n        this.viewer.loadModel(activeProject.model, () => onLoad(true))\n        this.viewer.setColor(activeProject['fist-slide-color'])\n        setTimeout(() => onLoad(false), 0)\n      }\n      \n      if (isSectionActive && activeSlide === 0) {\n        this.viewer.enabled = true\n      } else {\n        this.viewer.true = false\n      }\n    }\n\n\n\n    return (\n      <div className={`section fp-noscroll projects`} ref={node => this._element = node} data-slides={`${(activeProject.images.length === activeSlide - 1) ? 'last' : ''}${activeSlide === 0 ? 'first' : ''}`}>\n        <div className='slide fp-noscroll'>\n          <div className='first-slide'>\n            <div className='main-title'> {activeProject.title} </div>\n            <div ref={node => this._canvas = node} className='project-scene'> </div>\n          </div>\n        </div>\n\n        {activeProject.images.map((item, i) =>\n          <div key={i} className='slide fp-noscroll'> \n            <div className='image-slide' style={{ backgroundImage: `url(${item})` }}>\n            </div>\n          </div>)\n        }\n\n        <div className='slide descr-wrapper fp-noscroll' style={{background: activeProject['last-slide-color']}}>\n          <div className='descr-slide' >\n            <div className='title' data-animation='projectsTitle'> {activeProject.title} </div>\n            <div className='descr'>\n              {activeProject.description}\n            </div>\n          </div>\n        </div>\n\n        <div className='pagination-list'>\n          {[...activeProject.images, 's', 's'].map((item, i) => \n            <div key={i} onClick={() => setCurrentSlide(i)}  className={`item ${activeSlide === i ? 'active' : '' }`}>\n              <div/>\n            </div>\n          )}\n        </div>\n\n        {activeSlide !== 0 && activeSlide !== this.slidesLength ? \n          <div className='fit-image' onClick={() => this.setState({ openedImage: true })}></div>\n          : ''\n        }\n\n        {\n          openedImage ? \n            <div className='image-popup'>\n              <div className='image-popup-close' onClick={() => this.setState({ openedImage: false })}> \n                <div></div>\n                <div></div>\n              </div>\n              <img src={activeProject.images[activeSlide - 1]} alt='project img'/>\n            </div> : ''\n        }\n      </div>\n    )\n  }\n}\n\nexport default Projects\n","import React, { PureComponent } from 'react'\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport 'fullpage.js/vendors/scrolloverflow'\nimport 'fullpage.js/dist/fullpage.extensions.min.js'\n\nimport Home from './Home';\nimport Logo from './Logo';\nimport Burger from './Burger';\nimport Thanks from './Thanks';\nimport About from './About';\nimport Pagination from './Pagination';\nimport Projects from './Projects';\nimport Loader from './Loader';\n\nexport class App extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.goToSection = this.goToSection.bind(this)\n    this.goToSlide = this.goToSlide.bind(this)\n    this.goToProject = this.goToProject.bind(this)\n    this.unMountLoader = this.unMountLoader.bind(this )\n    this.scroll = this.scroll.bind(this)\n    this.fullpageApi = null\n  }\n\n  state = {\n    contentLoaded: false,\n    blockSlider: false,\n    homeLoaded: false\n  }\n  \n  componentDidMount() {\n    this.props.fetchData()\n  }\n  \n  async goToSection(i, block = true) {\n    if(block) await this.setState({blockSlider: true})\n    this.props.setCurrentSection(i)\n    this.fullpageApi.moveTo(i)\n  } \n\n  goToSlide(i) {\n    this.props.setCurrentSlide(i)\n    this.fullpageApi.moveTo(2, i)\n  }\n\n  goToProject(i) {\n    this.goToSlide(0) \n    this.props.setProject(i)\n  }\n\n  unMountLoader() {\n    this.setState({contentLoaded: true})\n  }\n\n  scrollSlider({ origin, destination, direction, scroll }) {\n    const { projects, data } = this.props\n    const project = data.projects[projects.active]\n    const projectLength = project.images.length + 1\n\n    \n    if (origin.index === 1) {\n      if (direction === 'up' && projects.activeSlide !== 0) {\n        this.fullpageApi.moveSlideLeft()\n        return false\n      } else if (direction === 'down' && project.activeSlide !== projectLength ) {\n        this.fullpageApi.moveSlideRight()\n        const res = direction === 'down' && projects.activeSlide === projectLength\n        res && scroll(destination)\n        return res\n      } else {\n        scroll(destination)\n        return true\n      }\n    }\n  }\n\n  scroll(destination) {\n    this.props.setCurrentSection(destination.index + 1)\n  }\n\n  toggleLoader = (open = true) => {\n    this.setState({ homeLoaded: open })\n  }  \n\n  render() {\n    const { sections, setCurrentSlide, setProject, data, projects } = this.props\n    const { goToSection } = this\n    const { contentLoaded, homeLoaded } = this.state\n    if(data && (data.title !== document.title)) document.title = data.title\n    \n    return ( \n      <>\n        { homeLoaded && contentLoaded ? '' : <Loader loaded={(!!data && homeLoaded)} unMount={this.unMountLoader}/> }\n        { data ? \n            <>\n              <Logo/>\n              <Burger setProject={ this.goToProject } projectsData={data.projects}  projects={projects} onClick={this.goToSection} active={sections.currentSection}/>\n              <Pagination onClick={i => this.goToSection(i)} active={sections.currentSection}/>\n              <ReactFullpage\n                scrollOverflow={true}\n                scrollHorizontally={true}\n                onLeave={(origin, destination, direction) => {\n                  this.scroll(destination)\n                  this.setState({blockSlider: false})\n                }}  \n                onSlideLeave={(origin, destination, direction) => {\n                  if(destination.isLast && direction.isFirst) {\n                    return false \n                  }\n                  setCurrentSlide(direction.index)\n                }}  \n                render={\n                  ({ fullpageApi }) => {\n                    if(fullpageApi) this.fullpageApi = fullpageApi\n                    return (\n                      <div>\n                        <Home data={data.home} setSection={goToSection} onLoad={this.toggleLoader} active={sections.currentSection === 1}/>\n                        <Projects data={data.projects} onLoad={this.toggleLoader} isSectionActive={sections.currentSection === 2} active={projects.active} setCurrentSlide={this.goToSlide} setProject={setProject} activeSlide={projects.activeSlide}/>\n                        <About data={data.about} active={sections.currentSection === 3}/>\n                        <Thanks data={data.last} onClick={() => goToSection(1)} active={sections.currentSection === 4}/>\n                      </div>\n                    )\n                  }\n                }\n              /> \n            </> \n          : '' }\n      </>\n    )\n  }\n}\n\nexport default App\n"," const API_URL = './data.json'\n \n export default {\n  API_URL\n }\n","import { connect } from 'react-redux'\n\nimport App from '../components/App'\nimport { setCurrentSection } from '../actions/SectionsActions';\nimport { fetchData } from '../actions/DataActions';\nimport { setCurrentProject, setCurrentSlide } from '../actions/ProjectsActions';\n\nexport default connect(\n  state => \n    ({\n      sections: state.sections,\n      data: state.data.data,\n      projects: state.projects\n    }),\n  dispatch => \n    ({\n      setCurrentSection(section) {\n        dispatch(setCurrentSection(section))\n      },\n      fetchData() {\n        dispatch(fetchData())\n      },\n      setProject(project) {\n        dispatch(setCurrentProject(project))\n      },\n      setCurrentSlide(slide) {\n        dispatch(setCurrentSlide(slide))\n      }\n\n    })\n)(App)\n","import ActionTypes from './../constants/ActionsTypes'\n\nconst setCurrentSection = section => \n  ({\n    type: ActionTypes.SET_SECTION,\n    section\n  })\n\nexport {\n  setCurrentSection,\n}","import ActionTypes from './../constants/ActionsTypes'\nimport { callApi } from '../libs/callApi';\nimport Api from './../constants/Api'\n\nconst fetchDataFail = error => \n  ({\n    type: ActionTypes.FETCH_DATA_FAIL,\n    payload: { error }\n  })\n\nconst fetchDataRequest = () => \n  ({\n    type: ActionTypes.FETCH_DATA_REQUEST\n  })\n\nconst fetchDataSucess = data => \n  ({\n    type: ActionTypes.FETCH_DATA_SUCCESS,\n    payload: { data }\n  })\n\nconst fetchData = () => async dispatch => {\n  dispatch(fetchDataRequest())\n  const res = await callApi(Api.API_URL)\n\n  res.json ? \n    dispatch(fetchDataSucess(res.json))\n    :\n    dispatch(fetchDataFail(res.error))\n}\n\nexport {\n  fetchData\n}","const callApi = (url, options) =>\n  fetch(url, options)\n    .then(\n      response => (response.ok\n        ? response.json()\n        : Promise.reject(response.text())\n      ),\n      error => Promise.reject(error))\n    .then(\n      json => ({ json }),\n      error => ({ error })\n    )\n    .catch(error => console.log({ error }))\n\nexport {\n  callApi\n}","import ActionTypes from './../constants/ActionsTypes'\n\nconst setCurrentProject = project => \n  ({\n    type: ActionTypes.SET_PROJECT,\n    project\n  })\n\nconst setCurrentSlide = slide => \n  ({\n    type: ActionTypes.SET_PROJECT_SLIDE,\n    slide\n  })\n\nexport {\n  setCurrentProject,\n  setCurrentSlide\n}","import './style/main.sass'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\nimport AppContainer from './containers/AppContainer';\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppContainer />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}