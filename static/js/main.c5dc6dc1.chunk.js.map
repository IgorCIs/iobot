{"version":3,"sources":["libs/deviceOrientation.js","constants/ActionsTypes.js","reducers/sections.js","reducers/data.js","reducers/projects.js","reducers/index.js","store/configureStore.js","libs/animateNode.js","components/Loader.js","libs/morphCloud.js","libs/cloudViewer.js","components/Home.js","components/Logo.js","components/Burger.js","components/Thanks.js","components/About.js","components/Pagination.js","components/Projects.js","components/App.js","constants/Api.js","containers/AppContainer.js","actions/SectionsActions.js","actions/DataActions.js","libs/callApi.js","actions/ProjectsActions.js","index.js"],"names":["THREE","require","module","exports","object","scope","this","rotation","reorder","enabled","deviceOrientation","screenOrientation","alpha","alphaOffsetAngle","onDeviceOrientationChangeEvent","event","onScreenOrientationChangeEvent","window","orientation","setObjectQuaternion","zee","Vector3","euler","Euler","q0","Quaternion","q1","Math","sqrt","quaternion","beta","gamma","orient","set","setFromEuler","multiply","setFromAxisAngle","connect","addEventListener","disconnect","removeEventListener","update","degToRad","updateAlphaOffsetAngle","angle","dispose","ActionsTypes","initialState","currentSection","sections","state","arguments","length","undefined","action","type","ActionTypes","Object","objectSpread","section","data","loading","active","error","payload","activeSlide","projects","project","slide","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","animate","elements","cb","notDelete","forEach","item","element","animationName","callback","node","handleAnimationEnd","classList","remove","add","setTimeout","animateNode","dataset","animation","_loader","MorphCloudShader","config","classCallCheck","onBeforeRenderConfig","shaderForMaterial","shaderMaterial","meshMaterial","shaderGeometry","shaderMesh","shaderMesh2","camera","raycaster","mouseXY","mouseLastUpdate","Date","now","mouseStandByAction","mouseStandByPosition","mouseOldestPosition","mouseHistory","mouseHistoryMax","i","push","animationFuntction","init","_this","pathCount","uniforms","eye","value","raycastPoint","raycastedPoints","sunDirection","maxDistance","pointSize","timeScaleFactor","uvScaleFactor","sizeFactor","lines","time","size","textureMatrix","vertexShader","concat","fragmentShader","MorphCloud","transparent","side","verticesForBuffer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","vertices","Symbol","iterator","next","done","nextVert","x","y","z","err","return","resultVertices","Float32Array","addAttribute","initAnimationProperties","onBeforeRender","renderer","scene","geometry","material","group","position","clone","needsUpdate","_this2","useUpdateMouseAction","parent","setFromCamera","intersectObject","nextMouseNormal","copy","test","shift","CloudViewer","onLoad","color","initialModels","activeProject","cameraPositionZ","minimalNormalSize","sceneElement","MainScene","offsetWidth","offsetHeight","setColor","cameraHolder","setPixelRatio","devicePixelRatio","appendChild","domElement","setSize","mouseNormal","render","MeshControllers","initMouse","loadModel","initResizer","initDeviceOrientation","initialDeviceOrientationPosition","e","aspect","updateProjectionMatrix","currentMin","min","setClearColor","model","_this3","clearAllMeshControllers","Promise","resolve","reject","obj_loader","OBJLoader","load","defaultCenter","fromArray","boundingSphere","expandByObject","getBoundingSphere","targetRadiusAspect","radius","targetCenterOffset","sub","center","traverse","nextObject","isMesh","nextGeometry","fromBufferGeometry","nextVer","multiplyScalar","DEFAULT_RADIUS_ASPECT","initShader","modelGeometry","ShadedMeshController","rotateX","PI","isMobile","deviceOrientControll","DeviceOrientationControls","defaultQ","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","MainMesh","slerp","updateMouseNormal","toSinFunc","offset","sin","translateFactor","_this4","requestAnimationFrame","renderAction","_this5","document","body","mp","pageX","pageY","wp","w","h","currentMouseNormal","Home","_this$props","props","viewer","_canvas","_this$props2","setSection","aboutSectionId","react_default","a","createElement","className","id","style","backgroundColor","ref","data-animation","onClick","href","links","email","mobile","PureComponent","Logo","Burger","closed","toggle","setState","prevState","scrollTo","index","scrollToProject","setProject","projectsData","Fragment","map","key","title","Thanks","_Component","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","subtitle","Component","About","_ref","text","column1","paragraphs","target","rel","cvLink","column2","Pagination","_PureComponent","pages","toConsumableArray","_","Project","openedImage","setViewer","fullpageApi","moveTo","slideChanges","isSectionActive","origin","direction","images","f","_this$props$data","description","_this$state","_element","data-slides","backgroundImage","background","setSlide","src","alt","Projects","Projects_Project","Loader","loaded","unMount","App","contentLoaded","homeLoaded","toggleLoader","open","goToSection","bind","assertThisInitialized","goToProject","unMountLoader","scroll","fetchData","setCurrentSection","destination","components_Loader","components_Logo","components_Burger","components_Pagination","react_fullpage_default","scrollOverflow","scrollHorizontally","onLeave","blockSlider","onSlideLeave","isFirst","isLast","Home_Home","home","components_Projects","components_About","about","components_Thanks","last","Api","dispatch","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","fetch","callApi","then","response","ok","json","catch","console","log","sent","stop","_x","setCurrentProject","setCurrentSlide","ReactDOM","es","AppContainer","getElementById"],"mappings":"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","file":"static/js/main.c5dc6dc1.chunk.js","sourcesContent":["/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nvar THREE = require(\"three\");\nvar DeviceOrientationControls = function( object ) {\n\n  var scope = this;\n\n  this.object = object;\n  this.object.rotation.reorder( \"YXZ\" );\n\n  this.enabled = true;\n\n  this.deviceOrientation = {};\n  this.screenOrientation = 0;\n\n  this.alpha = 0;\n  this.alphaOffsetAngle = 0;\n\n\n  var onDeviceOrientationChangeEvent = function( event ) {\n\n    scope.deviceOrientation = event;\n\n  };\n\n  var onScreenOrientationChangeEvent = function() {\n\n    scope.screenOrientation = window.orientation || 0;\n\n  };\n\n  // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n  var setObjectQuaternion = function() {\n\n    var zee = new THREE.Vector3( 0, 0, 1 );\n\n    var euler = new THREE.Euler();\n\n    var q0 = new THREE.Quaternion();\n\n    var q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n    return function( quaternion, alpha, beta, gamma, orient ) {\n\n      euler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n      quaternion.setFromEuler( euler ); // orient the device\n\n      quaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n      quaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n    }\n\n  }();\n\n  this.connect = function() {\n\n    onScreenOrientationChangeEvent(); // run once on load\n\n    window.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n    window.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n    scope.enabled = true;\n\n  };\n\n  this.disconnect = function() {\n\n    window.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n    window.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n    scope.enabled = false;\n\n  };\n\n  this.update = function() {\n\n    if ( scope.enabled === false ) return;\n\n    var alpha = scope.deviceOrientation.alpha ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) + this.alphaOffsetAngle : 0; // Z\n    var beta = scope.deviceOrientation.beta ? THREE.Math.degToRad( scope.deviceOrientation.beta ) : 0; // X'\n    var gamma = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n    var orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n    // alpha = orient ? 0 : alpha\n    alpha = 0\n    orient = 0\n    // if(orient) {\n    //   alpha = beta = gamma = orient = 0\n    // }\n\n    setObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n    this.alpha = alpha;\n    \n\n  };\n\n  this.updateAlphaOffsetAngle = function( angle ) {\n\n    this.alphaOffsetAngle = angle;\n    this.update();\n\n  };\n\n  this.dispose = function() {\n\n    this.disconnect();\n\n  };\n\n  this.connect();\n\n};\nmodule.exports = DeviceOrientationControls;","const FETCH_DATA_REQUEST = 'FETCH_DATA_REQUEST'\nconst FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCESS'\nconst FETCH_DATA_FAIL = 'FETCH_DATA_FAIL'\n\nconst SET_SECTION = 'SET_SECTION'\n\nconst SET_PROJECT = 'SET_DATA'\nconst SET_PROJECT_SLIDE = 'SET_PROJECT_SLIDE'\n\nexport default {\n  SET_SECTION,\n  SET_PROJECT,\n  FETCH_DATA_REQUEST,\n  FETCH_DATA_FAIL,\n  FETCH_DATA_SUCCESS,\n  SET_PROJECT_SLIDE\n}","import ActionTypes from '../constants/ActionsTypes'\n\nconst initialState = {\n  currentSection: 1\n}\n\nconst sections = (state = initialState, action) => {\n    switch(action.type) {\n        case ActionTypes.SET_SECTION:\n          return {\n            ...state,\n            currentSection: action.section\n          }\n          default:\n            return state\n    }\n}\n\nexport default sections","import ActionTypes from '../constants/ActionsTypes'\n\nconst initialState = {\n  data: null,\n  loading: false,\n  active: null,\n  error: null\n}\n\nconst data = (state = initialState, action) => {\n    switch(action.type) {\n      case ActionTypes.FETCH_DATA_REQUEST:\n        return {\n          ...state,\n          loading: true,\n          error: null,\n          data: null,\n        }\n      case ActionTypes.FETCH_DATA_SUCCESS: {\n        return {\n          ...state,\n          loading: false,\n          error: false,\n          data: action.payload.data\n        }\n      }\n      case ActionTypes.FETCH_DATA_FAIL:\n        return {\n          ...state,\n          loading: false,\n          error: action.payload.error,\n          data: null\n        }\n        default:\n          return state\n    }\n}\n\nexport default data","import ActionTypes from '../constants/ActionsTypes'\n\nconst initialState = {\n  active: 0,\n  activeSlide: 0\n}\n\nconst projects = (state = initialState, action) => {\n    switch(action.type) {\n        case ActionTypes.SET_PROJECT:\n          return {\n            ...state,\n            active: action.project,\n            activeSlide: 0\n          }\n\n        case ActionTypes.SET_PROJECT_SLIDE:\n          return {\n            ...state,\n            activeSlide: action.slide,\n          }\n          \n        default:\n          return state\n    }\n}\n\nexport default projects","import { combineReducers } from 'redux';\nimport sections from './sections';\nimport data from './data';\nimport projects from './projects';\n\nconst rootReducer = combineReducers({\n  sections,\n  data,\n  projects  \n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './../reducers';\nimport thunkMiddleware from 'redux-thunk';\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n\nexport default store","export default function animateNode(element, animationName, callback, notDelete) {\n  const node = element\n  node.classList.add('animated', animationName)\n\n  function handleAnimationEnd() {\n      !notDelete && node.classList.remove('animated')\n      !notDelete && node.classList.remove(animationName)\n\n      if (typeof callback === 'function') callback()\n  }\n\n  //lol iOs :c \n  node.addEventListener('animationend', () => handleAnimationEnd(), false)\n  node.addEventListener('webkitAnimationEnd', () => handleAnimationEnd(), false)\n  node.addEventListener('webkitanimationend', () => handleAnimationEnd(), false)\n  node.addEventListener('animationend', () => handleAnimationEnd(), false)\n  node.addEventListener('animationiteration', () => setTimeout(() => handleAnimationEnd(), 500),false)\n\n}\n\nexport function animate(active, elements, cb, notDelete) {\n  if(active) \n    elements.forEach(item => {\n      if(item) animateNode(item, item.dataset.animation, cb, notDelete)\n    })\n}","import React from 'react'\nimport { animate } from '../libs/animateNode';\n\nlet _loader\n\nconst Loader = ({ loaded, unMount }) => {\n  if(loaded) animate(loaded, [_loader], () => {\n    unMount()\n  })\n  \n  return (\n    <div className='loader' ref={node => _loader = node} data-animation='fadeOut'>\n      <div></div>\n    </div>\n  )\n}\n\nexport default Loader","import * as THREE from 'three';\n\nexport function MorphCloud( config ){\n\n    const pathCount = config.pathCount;\n\n    const ShaderParams = {\n\n        uniforms: {\n            'eye': { value: new THREE.Vector3() },\n            'raycastPoint': { value: new THREE.Vector3() },\n            'raycastedPoints': { value: [ new THREE.Vector3() ] },\n            'sunDirection': { value: new THREE.Vector3() },\n            'maxDistance': { value: 4.0 },\n            'pointSize': { value: 8.0 },\n            'timeScaleFactor': { value:  0.003 },\n            'uvScaleFactor': { value:  0.003 },\n            'sizeFactor': { value:  3.2 },\n            'alpha': { value: 0.2 },\n            'lines': { value: 20.0 },\n            'time': { value: 0.0 },\n            'size': { value: 122.3 },\n            'textureMatrix': { value: new THREE.Matrix4() },\n        },\n\n        vertexShader:\n            `\n            uniform float sizeFactor;\n            uniform float uvScaleFactor;\n            uniform float timeScaleFactor;\n            uniform float pointSize;\n            \n            uniform mat4 textureMatrix;\n            uniform float maxDistance;\n            uniform float time;\n            uniform float alpha;\n            uniform vec3 eye;\n            \n            varying vec4 worldPosition;\n            \n            varying vec2 vUv;\n            varying vec4 vColor;\n            varying float distanceToMouseAlpha;\n            varying float distanceToRaycastPoint;\n            \n            float PI = 3.141592653589793;\n            \n            uniform vec3 raycastPoint;\n            uniform vec3 raycastedPoints[ ${ pathCount } ];\n            const float pathCount = ${ pathCount }.0; \n            const int pathCountInt = ${ pathCount }; \n            \n            float distanceBetweenVec3( vec3 v1, vec3 v2 ){\n                float dx = v1.x - v2.x;\n                float dy = v1.y - v2.y;\n                float dz = v1.z - v2.z;\n                float result = sqrt( dx * dx + dy * dy + dz * dz );\n                return result;\n            }\n            \n            vec3 convertToNormal( vec3 src ){\n                return vec3( ( 0.5 - src.x ) * 2.0, ( 0.5 - src.y ) * 2.0, ( 0.5 - src.z ) * 2.0 );\n            }\n            \n            float getMod( float a, float b ) {\n                float result =  a - ( b * floor( a / b ) );\n                return result;\n            }\n            \n            vec4 getMixedColor( sampler2D tex1, sampler2D tex2, vec2 _uv ){\n                    vec4 mixedColor = ( texture2D( tex1, _uv ) + texture2D( tex2, _uv ) ) * 0.5;\n                    return mixedColor;\n            }\n            \n            \n            vec3 lt_ln_to_xyz( float lt, float ln, float radius ){\n                vec3 resultXYZ = vec3(\n                    radius * cos(lt) * cos(ln),\n                    radius * cos(lt) * sin(ln),\n                    radius * sin(lt)\n                );\n                return resultXYZ;\n            }\n            \n            vec2 xyz_to_lt_ln( vec3 pos ){\n                return vec2( \n                    acos( pos.y / sqrt( pos.x * pos.x + pos.z * pos.z) ), \n                    atan( pos.x / pos.z ) \n                );\n            }\n            \n            vec3 slerp(vec3 start, vec3 end, float t) {  \n                    // Dot product - the cosine of the angle between 2 vectors.  \n                    float dot = dot(start, end);\n                    // Clamp it to be in the range of Acos() \n                    // This may be unnecessary, but floating point  \n                    // precision can be a fickle mistress.    \n                    dot = clamp(dot, -1.0, 1.0);  \n                    // Acos(dot) returns the angle between start and end,   \n                    // And multiplying that by time returns the angle between   \n                    // start and the final result.   \n                    float theta = acos(dot) * t;\n                    vec3 RelativeVec = normalize(end - start * dot); \n                    return ((start * cos(theta)) + (RelativeVec * sin(theta)));\n            }\n            \n            vec3 aproximatedRaycastedPoint(){\n            \n                vec3 finalPoint = vec3( 0.0 );\n                \n                float floatIterator = 0.0;\n                float totalMultiplyFactor = 0.0;\n                \n                for( int i = 0; i < pathCountInt; i++ ){\n                    float nextMultiplyFactor = ( floatIterator / pathCount );\n                    totalMultiplyFactor += nextMultiplyFactor;\n                    finalPoint += raycastedPoints[ i ] * nextMultiplyFactor;\n                    floatIterator += 1.0;\n                }\n                finalPoint = finalPoint / totalMultiplyFactor;\n                return finalPoint;\n            }\n            \n            vec4 getNearestRaycastedPoint( vec3 position ){\n                vec4 finalPoint = vec4( 0.0 );\n                float lastDistance = 99999999999.0;\n                for( int i = 0; i < pathCountInt; i++ ){\n                    float nextDistance = distanceBetweenVec3( position.xyz , raycastedPoints[ i ] );\n                    if( nextDistance < lastDistance ){\n                        lastDistance = nextDistance;\n                        finalPoint =  vec4( raycastedPoints[ i ], abs( sin( float( i ) / pathCount * -PI / 2.0 ) ) );\n                    }\n                }\n                return finalPoint;\n            }\n            \n            vec2 getLatLngMod( float latFactor, float lngFactor ){\n                return vec2( getMod(  latFactor,  PI * 2.0  ), -PI/ 2.0 + sin( getMod( lngFactor,  PI  ) ) * PI  );\n            }\n            \n            void main() {\n            \n            \tvUv = uv;\n            \t\n                vec3 normaledEye = normalize( eye );\n            \t\n            \tvec4 pixelPosition = modelMatrix * vec4( position, 1.0 );\n            \tvec4 mvStartPosition = pixelPosition;\n            \tworldPosition = pixelPosition;\n            \t\n            \tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n            \tvec4 tempNearest = getNearestRaycastedPoint( pixelPosition.xyz );\n            \ttempNearest.x = -50.0 + 100.0 * sin( PI/2.0  * getMod( time * timeScaleFactor, 1.0 ) );\n            \tvec4 nearestRaycasted = vec4(\n            \t    tempNearest.x - pixelPosition.y,\n            \t    pixelPosition.y,\n            \t    0.0,\n            \t    0.001\n            \t);\n            \tvec3 _raycastPoint = nearestRaycasted.xyz;\n            \tvec3 flatPixelPosition = vec3( pixelPosition.xy, 0.0 );\n            \tdistanceToRaycastPoint = distanceBetweenVec3( flatPixelPosition.xyz , _raycastPoint );\n            \n                float distanceFactor;\n                vec4 finalGlPosition;\n            \n                float distanceAlpha = 1.0 - distanceToRaycastPoint / maxDistance;\n                distanceFactor = distanceAlpha;\n                distanceToMouseAlpha = distanceAlpha;\n                float timeScaleFactorAfter = timeScaleFactor * 0.7;\n                float pixelPScaleFactor = 0.2;\n                \n                float multiplyFactorForRaycastedPath = 1.0;\n                if( distanceFactor < 0.12 ){\n                    distanceFactor = 0.12;\n                    timeScaleFactorAfter = timeScaleFactor;\n                    pixelPScaleFactor = 0.2;\n                } else {\n                    distanceFactor = 0.12 + (distanceFactor - 0.12) * 0.3;\n                    timeScaleFactorAfter = timeScaleFactor;\n                    pixelPScaleFactor = 0.3;\n                }\n                \n                vec2 currentLtLn = xyz_to_lt_ln(  vec3( 1.0, 1.0, 0.0 ) );\n                \n                float ltFactor = ( position.x + position.z );\n                float lnFactor = ( position.z - position.y );\n                \n                currentLtLn = getLatLngMod(\n                    currentLtLn.x + ltFactor * pixelPScaleFactor + ( time * timeScaleFactorAfter * 0.5 ) * PI * 2.0,\n                    currentLtLn.y + lnFactor * pixelPScaleFactor + ( time * timeScaleFactorAfter ) *  PI\n                );\n                \n                vec3 positionOfLtLn_default = lt_ln_to_xyz( \n                    currentLtLn.x, \n                    currentLtLn.y, \n                    distanceFactor * 2.5 * multiplyFactorForRaycastedPath\n                );\n                \n                vec3 positionOfLtLn_for_pointer = lt_ln_to_xyz( \n                    currentLtLn.x, currentLtLn.y, \n                    distanceFactor * 2.5 * abs( sin( time * timeScaleFactor ) )\n                );\n                \n                vec3 positionOfLtLn;\n                \n                if( distanceFactor > 0.05 ){\n                    float clipFactor = 0.0;\n                    float softFactor = 0.35;\n                    float test1 = ( distanceFactor - clipFactor ) * softFactor;\n                    float test2 = 0.0;\n                    if( test1 > 0.0 ){  test2 = sin( ( test1 ) * 2.0 * PI / 2.0 ); }\n                    positionOfLtLn = slerp( positionOfLtLn_default, positionOfLtLn_default, test2 );\n                } else {\n                    positionOfLtLn = positionOfLtLn_default;\n                }\n                \n                pixelPosition.xyz += positionOfLtLn;\n                vec4 preGlPosition =  projectionMatrix * modelViewMatrix * pixelPosition;\n                finalGlPosition = preGlPosition;\n                    \n                gl_Position =  finalGlPosition;\n                vColor = normalize( finalGlPosition );\n                \n                if ( gl_Position.w > 0.0 ) {\n                    gl_PointSize = 12.0 * pointSize / gl_Position.w + ( pointSize * distanceFactor * 0.5 );\n                    if( distanceFactor > 0.12 ){\n                        gl_PointSize = gl_PointSize + 4.0 * ( distanceFactor * 3.0 );\n                    }\n                } else {\n                    gl_PointSize = 3.0;\n                }\n                \n            }\n        `,\n\n        fragmentShader: `\n            uniform float alpha;\n            uniform float lines;\n            uniform float time;\n            uniform float size;\n            uniform vec3 eye;\n            uniform vec3 sunDirection;\n            uniform float timeScaleFactor;\n\n            varying vec4 worldPosition;\n            varying vec2 vUv;\n            varying vec4 vColor;\n            varying float distanceToMouseAlpha;\n            varying float distanceToRaycastPoint;\n            \n           \n            const float gridSize = 3.0;\n            const float pixelsPerUnit = 32.0;\n            const vec2 resolution = vec2( 1024.0, 1024.0 );\n            \n            const vec3 tinLineColor = vec3( 1.0, 1.0, 1.0 );\n            const vec3 wideLineColor = vec3( 1.0, 1.0, 0.6 );\n            \n            const float tinLineWidth = 32.0;\n            const float wideLineWidth = 12.0;\n            \n            const float tinLineOpacity = 1.0;\n            const float wideLineOpacity = 1.0;\n            \n            float PI = 3.141592653589793;\n     \n            float getTimeLineWidthScale(){\n                // return ( tinLineWidth / 2.0 ) + abs( sin( time * 0.13 ) * tinLineWidth );\n                return tinLineWidth;\n            }\n     \n            float getMod( float a, float b ) {\n                float result =  a - ( b * floor( a / b ) );\n                return result;\n            }\n            \n            bool checkIsLine(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n            \n                bool lineAvailableX = gridAlphaModLeft.x < lineAlphaSize.x;\n                // bool lineAvailableX = false;\n                bool lineAvailableY = false;\n                // bool lineAvailableY = gridAlphaModLeft.y < lineAlphaSize.y;\n            \n                return lineAvailableX || lineAvailableY || false;\n            }\n            \n            bool checkIsLine2(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n            \n                bool lineAvailableX = gridAlphaModLeft.x < lineAlphaSize.x;\n                bool lineAvailableY = gridAlphaModLeft.y < lineAlphaSize.y;\n            \n                return lineAvailableX || lineAvailableY || false;\n            }\n            \n            bool checkIsPoint(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n            \n                bool lineAvailableX = gridAlphaModLeft.x < lineAlphaSize.x;\n                bool lineAvailableY = gridAlphaModLeft.y < lineAlphaSize.y;\n            \n                return  ( lineAvailableX && lineAvailableY ) || false;\n            }\n            \n            float checkLineOpacityByX(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n                \n                float nextOpacity = sin( gridAlphaModLeft.x / lineAlphaSize.x * 3.14 );\n                return nextOpacity;\n            }\n            \n            bool checkIsCenter(){\n            \n                bool isCenterX = abs(\n                   ( vUv.x * resolution.x * pixelsPerUnit ) - ( 0.5 * resolution.x * pixelsPerUnit )\n                ) < ( wideLineWidth * .5 );\n            \n                bool isCenterY = abs(\n                    ( vUv.y * resolution.y * pixelsPerUnit ) - ( 0.5 * resolution.y * pixelsPerUnit )\n                ) < ( wideLineWidth * .5 );\n            \n                if( isCenterX ){\n                    return true;\n                } else if( isCenterY ) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n     \n            vec4 getMixedColor( sampler2D tex1, sampler2D tex2, vec2 _uv ){\n                    vec4 mixedColor = ( texture2D( tex1, _uv ) + texture2D( tex2, _uv ) ) * 0.5;\n                    return mixedColor;\n            }\n            \n            highp float distanceBetween( vec2 vector1, vec2 vector2 ){\n                float xLength = vector1.x - vector2.x;\n                float yLength = vector1.y - vector2.y;\n                return sqrt( xLength * xLength + yLength * yLength );\n            }\n            \n            float distanceToLine(vec2 p1, vec2 p2, vec2 point) {\n                float a = p1.y-p2.y;\n                float b = p2.x-p1.x;\n                return abs(a*point.x+b*point.y+p1.x*p2.y-p2.x*p1.y) / sqrt(a*a+b*b);\n            }\n            \n            float drawLine(vec2 p1, vec2 p2) {\n            \n              vec2 resolution = vec2( 1024., 1024. );\n              float Thickness = 15.0;\n              \n              vec2 uv = gl_FragCoord.xy / resolution.xy;\n            \n              float a = abs(distanceBetween(p1, uv));\n              float b = abs(distanceBetween(p2, uv));\n              float c = abs(distanceBetween(p1, p2));\n            \n              if ( a >= c || b >=  c ) return 0.0;\n            \n              float p = (a + b + c) * 0.5;\n            \n              // median to (p1, p2) vector\n              float h = 2. / c * sqrt( p * ( p - a) * ( p - b) * ( p - c));\n            \n              return mix( 1.0, .0, smoothstep( 0.5 * Thickness, 1.5 * Thickness, h ) );\n            }\n            \n            void main() {\n            \n                vec2 pc = ( gl_PointCoord - 0.5 ) * 2.0;\n                vec4 color1 = vColor;\n                \n                float r = 0.0, delta = 0.0, alpha = 1.0;\n                vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n                r = dot(cxy, cxy);\n                if ( r > 1.0 ) { discard; }\n            \n                color1.xyz = vec3( 0.7 );\n                \n                // float transparentFactor = 1. - r;\n                float transparentFactor = 1.;\n                color1.a = transparentFactor;\n                color1.xyz *= 0.9 + 0.1 * r;\n                \n                vec4 color2 = vec4( 1.0, 0.0, 0.0, 1.0 );\n                \n                if( distanceToMouseAlpha < 0.0 ){\n                    gl_FragColor = color1;\n                } else {\n                    gl_FragColor = color2;\n                }\n\n                // gl_FragColor = vec4( 1.0 ); \n            }\n        `\n\n    };\n\n    return ShaderParams;\n\n}\n\nexport default class MorphCloudShader {\n\n    constructor( config ){\n        this.config = config;\n\n        this.onBeforeRenderConfig = {};\n\n        this.shaderForMaterial = null;\n        this.shaderMaterial = null;\n        this.meshMaterial = [];\n        this.shaderGeometry = null;\n        this.shaderMesh = null;\n        this.shaderMesh2 = null;\n        this.camera = null;\n        this.raycaster = new THREE.Raycaster();\n        this.mouseXY = new THREE.Vector2();\n\n        this.mouseLastUpdate = Date.now();\n        this.mouseStandByAction = false;\n        this.mouseStandByPosition = false;\n\n        this.mouseOldestPosition = new THREE.Vector2();\n        this.mouseHistory = [];\n        this.mouseHistoryMax = 12;\n        for( let i = 0; i < this.mouseHistoryMax; i++ ){ this.mouseHistory.push( new THREE.Vector2() ) }\n\n        this.animationFuntction = () => {};\n\n        this.init();\n    }\n\n    init(){\n\n        this.shaderForMaterial = MorphCloud( {\n            pathCount: this.config.pathCount\n        } );\n        // this.shaderForMaterial2 = MorphCloudLines( {\n        //     pathCount: this.config.pathCount\n        // } );\n\n        this.shaderForMaterial.uniforms.lines.value = 3;\n        this.shaderForMaterial.uniforms.time.value = 0;\n        this.shaderForMaterial.uniforms.timeScaleFactor.value = 0.003;\n\n        let raycastedPoints = [];\n        for( let i = 0; i < this.config.pathCount; i++  ){ raycastedPoints.push( new THREE.Vector3() ); }\n        this.shaderForMaterial.uniforms.raycastedPoints.value = raycastedPoints;\n\n        this.shaderMaterial = new THREE.ShaderMaterial( {\n            uniforms: this.shaderForMaterial.uniforms,\n            vertexShader: this.shaderForMaterial.vertexShader,\n            fragmentShader: this.shaderForMaterial.fragmentShader,\n            transparent: true,\n            side: THREE.BackSide\n        } );\n        // this.shaderMaterial2 = new THREE.ShaderMaterial( {\n        //     uniforms: this.shaderForMaterial2.uniforms,\n        //     vertexShader: this.shaderForMaterial2.vertexShader,\n        //     fragmentShader: this.shaderForMaterial2.fragmentShader,\n        //     transparent: true,\n        //     wireframe: true,\n        //     side: THREE.DoubleSide\n        // } );\n\n        this.shaderGeometry = new THREE.BufferGeometry();\n\n        const verticesForBuffer = [];\n        for ( const nextVert of this.config.vertices ) {\n            verticesForBuffer.push( nextVert.x );\n            verticesForBuffer.push( nextVert.y );\n            verticesForBuffer.push( nextVert.z );\n        }\n        const resultVertices = new Float32Array( verticesForBuffer );\n        this.shaderGeometry.addAttribute( 'position', new THREE.BufferAttribute( resultVertices, 3 ) );\n\n\n        this.shaderMesh = new THREE.Points( this.shaderGeometry,  this.shaderMaterial );\n        // this.shaderMesh2 = new THREE.Mesh( this.shaderGeometry,  this.shaderMaterial2 );\n        // this.shaderMesh.add( this.shaderMesh2 );\n\n        this.initAnimationProperties();\n\n        this.shaderMesh.onBeforeRender = ( renderer, scene, camera, geometry, material, group ) => {\n            if( this.config.onBeforeRender ){\n                this.config.onBeforeRender( renderer, scene, camera, geometry, material, group );\n            }\n            this.onBeforeRenderConfig = { renderer, scene, camera, geometry, material, group };\n\n        }\n\n    }\n\n    animate(){\n        if( this.onBeforeRenderConfig.camera ){\n\n\n            this.camera = this.onBeforeRenderConfig.camera;\n            this.animationFuntction();\n            this.shaderMaterial.uniforms[ 'eye' ].value = this.camera.position.clone();\n            this.shaderMaterial.uniforms[ 'time' ].value += 1;\n            // this.shaderMaterial2.uniforms[ 'eye' ].value = this.camera.position.clone();\n            // this.shaderMaterial2.uniforms[ 'time' ].value += 1;\n            this.shaderMaterial.needsUpdate = true;\n        }\n    }\n\n    initAnimationProperties(){\n\n        let raycastedPoints = [];\n        for( let i = 0; i < this.config.pathCount; i++  ){ raycastedPoints.push( new THREE.Vector3() ); }\n        this.shaderMaterial.uniforms[ 'raycastedPoints' ].value = raycastedPoints;\n\n        this.animationFuntction = () => {\n\n            if( Date.now() > this.mouseLastUpdate + 3300 ){ this.mouseStandByAction = true; }\n\n            if( this.mouseStandByAction ){\n                this.mouseStandByPosition = this.mouseStandByPosition + 1 < this.mouseHistoryMax ? this.mouseStandByPosition + 1 : 0;\n                this.useUpdateMouseAction( this.mouseHistory[ this.mouseStandByPosition ] );\n            }\n\n        };\n\n    }\n\n    remove(){\n        this.shaderMesh.parent.remove( this.shaderMesh );\n        this.shaderMesh.geometry.dispose();\n        this.shaderMesh.material.dispose();\n        this.shaderMaterial.dispose();\n        this.shaderGeometry.dispose();\n        this.shaderMaterial = null;\n        this.shaderGeometry = null;\n    }\n\n    raycastModel(){\n        this.raycaster.setFromCamera( this.mouseXY, this.camera );\n        return this.raycaster.intersectObject( this.shaderMesh );\n    }\n\n    useUpdateMouseAction( nextMouseNormal ){\n        this.mouseXY.copy( nextMouseNormal );\n    }\n\n    updateMouseNormal( nextMouseNormal ){\n\n        this.mouseLastUpdate = Date.now();\n        this.mouseStandByAction = false;\n        this.mouseStandByPosition = 0;\n\n        this.mouseHistory.push( nextMouseNormal.clone() );\n\n        if( this.mouseHistory.length > this.mouseHistoryMax ){\n            let test = this.mouseHistory.shift();\n            this.mouseOldestPosition.copy( test );\n        }\n\n        this.useUpdateMouseAction( nextMouseNormal );\n    }\n\n}\n\n","import * as THREE from 'three';\n// import OrbitControlls from 'three-orbitcontrols';\nimport { OBJLoader } from 'three-obj-mtl-loader';\nimport MorphCloudShader from './morphCloud';\nimport DeviceOrientationControls from './deviceOrientation.js'\nimport isMobile from 'is-mobile'\n\n\nexport default class CloudViewer {\n  constructor(element, onLoad, color, initialModels, activeProject, cameraPositionZ = 30) {\n    this.cameraPositionZ = cameraPositionZ;\n    this.minimalNormalSize = 400;\n    this.initialModels = initialModels;\n    this.sceneElement = element;\n    this.onLoad = onLoad;\n    this.activeProject = activeProject;\n    \n    this.MainScene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(60, this.sceneElement.offsetWidth / this.sceneElement.offsetHeight , 0.1, 1000 );\n    \n    this.renderer = new THREE.WebGLRenderer({ alpha: !color });\n    this.camera.position.set(0, 0, cameraPositionZ);\n\n    if ( color ) {\n      this.setColor(color);\n    }\n\n    this.cameraHolder = new THREE.Object3D();\n    this.cameraHolder.add( this.camera );\n\n    this.renderer.setPixelRatio( window.devicePixelRatio );\n\n    this.sceneElement.appendChild(this.renderer.domElement);\n    this.renderer.setSize(this.sceneElement.offsetWidth, this.sceneElement.offsetHeight);    \n\n    this.mouseNormal = new THREE.Vector2();\n\n    this.render();\n\n    this.MainScene.add(this.cameraHolder);\n\n    this.MeshControllers = [];\n\n    this.enabled = true;\n\n    this.initMouse();\n    this.loadModel(this.initialModels[0], onLoad);\n    this.initResizer();\n    this.initDeviceOrientation();\n    \n    this.initialDeviceOrientationPosition = null\n  }\n  \n  initDeviceOrientation() {\n    window.addEventListener('deviceorientation', (e) => {\n      if(!this.initialDeviceOrientationPosition) {\n        this.initialDeviceOrientationPosition = e        \n      }\n\n      // console.log(\"TCL: CloudViewer -> initDeviceOrientation -> this.MeshControllers[0].rotate.x\", this.MeshControllers[0].shaderMesh)\n    })\n  }\n\n  initResizer(){\n\n    window.addEventListener( 'resize', ()  => {\n      setTimeout(() => {\n        this.renderer.setSize(this.sceneElement.offsetWidth, this.sceneElement.offsetHeight );\n        this.camera.aspect = this.sceneElement.offsetWidth / this.sceneElement.offsetHeight;\n        this.camera.updateProjectionMatrix();\n        \n        const currentMin = Math.min(this.sceneElement.offsetWidth, this.sceneElement.offsetHeight);\n         \n        if (currentMin < this.minimalNormalSize) {\n          this.camera.position.z = this.cameraPositionZ + this.cameraPositionZ * (1 - currentMin / this.minimalNormalSize); \n        }\n        \n      }, 50)\n    });\n\n  }\n\n  setColor(color) {\n    this.renderer.setClearColor( color );\n  }\n\n  loadModel(model, onLoad) {\n    this.clearAllMeshControllers()\n    return new Promise((resolve, reject) => {\n      this.obj_loader = new OBJLoader();\n        this.obj_loader.load( model, ( object ) => {\n          let vertices = [];\n\n          const DEFAULT_RADIUS_ASPECT = 22.465094820192128;\n          const defaultCenter = new THREE.Vector3().fromArray(  [ 0, 0, 0 ] );\n          const boundingSphere = new THREE.Box3().expandByObject( object ).getBoundingSphere( new THREE.Sphere() );\n\n          const targetRadiusAspect = DEFAULT_RADIUS_ASPECT / boundingSphere.radius;\n          const targetCenterOffset = defaultCenter.sub( boundingSphere.center );\n\n          object.traverse( ( nextObject ) => {\n            if ( nextObject.isMesh ) {\n              if ( nextObject.geometry ) {\n                if ( nextObject.geometry.type === 'BufferGeometry' ) {\n                  let nextGeometry = new THREE.Geometry().fromBufferGeometry( nextObject.geometry );\n                  vertices = vertices.concat( nextGeometry.vertices );\n                }\n              }\n            }\n          });\n          for (const nextVer of vertices) {\n            nextVer.multiplyScalar( targetRadiusAspect );\n            nextVer.add( targetCenterOffset );\n            nextVer.y += DEFAULT_RADIUS_ASPECT/2;\n          }\n          this.initShader( vertices, onLoad );\n          \n          resolve( vertices );\n        });\n      }\n    )\n  }\n  \n  initShader( model, onLoad ) {\n    this.modelGeometry = model;\n    \n    const ShadedMeshController = new MorphCloudShader({\n      pathCount: 1,\n      vertices: this.modelGeometry\n    });\n\n    ShadedMeshController.shaderGeometry.rotateX( -Math.PI / 2);\n\n    this.MainScene.add( ShadedMeshController.shaderMesh );\n\n    if(isMobile()) ShadedMeshController.deviceOrientControll = new DeviceOrientationControls(new THREE.Object3D());\n    ShadedMeshController.defaultQ = ShadedMeshController.shaderMesh.quaternion.clone();\n    \n    this.MeshControllers.push( ShadedMeshController );\n\n    setTimeout(() => onLoad(true), 1000);\n  }\n\n  clearAllMeshControllers(){\n    for( const nextController of this.MeshControllers ){\n      nextController.remove();\n    }\n    this.MeshControllers = [];\n    this.modelGeometry = [];\n  }\n\n  renderAction() {\n\n    this.renderer.render( this.MainScene, this.camera );\n\n    for( const MainMesh of this.MeshControllers ) {\n        if(MainMesh.deviceOrientControll) {\n          MainMesh.deviceOrientControll.update();\n          MainMesh.shaderMesh.quaternion.copy(MainMesh.defaultQ.clone().slerp(MainMesh.deviceOrientControll.object.quaternion.clone(), 0.15 )) \n\n        }\n        \n\n        MainMesh.updateMouseNormal( this.mouseNormal );\n        MainMesh.animate();\n        const toSinFunc = ( alpha, offset ) => Math.sin( Math.PI / 2 * ( alpha + offset ) )\n        const translateFactor = Math.PI / 2;\n        this.cameraHolder.rotation.x = -0.2 + toSinFunc( MainMesh.mouseOldestPosition.y, 0 ) * translateFactor * 0.05;\n        this.cameraHolder.rotation.y = -toSinFunc( MainMesh.mouseOldestPosition.x, 0 ) * translateFactor * 0.1;\n    }\n  }\n\n  render() {\n    requestAnimationFrame(() => this.render());\n    if( this.enabled ) this.renderAction(); \n  }\n\n  initMouse() {\n    if(!isMobile()) {\n      document.body.addEventListener('mousemove', (e) => {\n        if( this.enabled ){\n          const mp = { x: e.pageX, y: e.pageY };\n          const wp = { w: this.sceneElement.offsetWidth, h: this.sceneElement.offsetHeight };\n          const currentMouseNormal = new THREE.Vector2( -1.0 + ( mp.x / wp.w * 2.0  ), 1.0 - ( mp.y / wp.h * 2.0 ) );\n            \n          this.mouseNormal.copy( currentMouseNormal );\n        }\n      });\n    }\n  }\n}\n","import React, { PureComponent } from 'react'\nimport { animate } from './../libs/animateNode'\nimport CloudViewer from '../libs/cloudViewer';\n\nexport default class Home extends PureComponent {\n  \n  elements = []\n\n  componentDidMount() {\n    const { data, onLoad } = this.props\n    \n    this.viewer = new CloudViewer(this._canvas, () => onLoad(true), null, [data.model])\n  }\n  \n  render() {\n    const { data, active, setSection, aboutSectionId} = this.props\n    animate(active, this.elements)\n\n    if (this.viewer) {\n      if (!active) {\n        this.viewer.enabled = false\n      } else {\n        this.viewer.enabled = true\n      }\n    }\n\n    return (\n      <div className='home fp-noscroll section' id='home'>\n        <div style={{ backgroundColor: data.color }} ref={node => this._canvas = node} id='homescene' className='scene'> </div>\n        <div ref={node => this.elements.push(node)} data-animation='fadeInRight' className='title'>\n          <div>\n            My name is <span onClick={() => setSection(aboutSectionId)}>Kuba</span>, <br/>I do cool sh*t & <br/> this is my <span onClick={() => setSection(2)}> book </span>\n          </div>\n        </div>\n        <div className='contacts'>\n          <div className='wrapper'>\n            <div className='email'>\n              <a className='fadeInUp' data-animation='fadeInUp' ref={node => this.elements.push(node)} href={`mailto:${data.links.email}`}> {data.links.email} </a>\n            </div>\n            <div className='phone'>\n              <a className='fadeInUp' data-animation='fadeInUp' ref={node => this.elements.push(node)}  href={`tel${data.links.mobile}`}> {data.links.mobile} </a>\n            </div>\n          </div>\n\n        </div>\n\n      </div>  \n    )\n  }\n}\n","import React from 'react'\nimport isMobile from 'is-mobile'\n\nconst Logo = () => {\n  return (\n    <div className={`${isMobile() ? 'mobile' : ''} animated fadeInLeft logo`}>\n      \n    </div>\n  )\n}\n\nexport default Logo","import React, { PureComponent } from 'react'\nimport isMobile from 'is-mobile'\n\nclass Burger extends PureComponent {\n  state = {\n    closed: true\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      closed: !prevState.closed\n    }))\n  }\n\n  scrollTo = index => {\n    this.toggle()\n    this.props.onClick(index)\n  }\n\n  scrollToProject = (project) => {\n    this.toggle()\n    this.props.onClick(project + 2)\n    this.props.setProject(project)\n  }\n  \n  render() {\n    const { closed } = this.state\n    const { scrollTo, toggle, scrollToProject } = this\n    const { active, projectsData } = this.props\n\n    return (\n      <>\n        <div className={`navbar ${closed ? 'closed' : ''}`}> \n          <div className={`${isMobile() ? 'mobile' : ''} navbar-logo`}> </div>\n          <div className='menu'> \n            <div className={`item ${active === 1 ? 'active' : '' }`} onClick={() => scrollTo(1)}> Start </div>\n            {\n              projectsData.map((item, i) => (\n                <div key={i} onClick={() => scrollToProject(i)} className={`item ${active === i + 2 ? 'active' : ''}`}> {item.title} </div>\n              ))\n            }\n            <div className={`item ${active === projectsData.length + 2 ? 'active' : ''}`} onClick={() => scrollTo(projectsData.length + 2)}> About me </div>\n          </div>\n        </div>\n          \n        <div onClick={toggle} className={`burger animated fadeInRight ${closed ? '' : 'active' }`}>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Burger\n","import React, { Component } from 'react'\nimport { animate } from '../libs/animateNode';\n\nexport class Thanks extends Component {\n  elements = []\n\n  render() {\n    const { data, active } = this.props\n    animate(active, this.elements)\n    \n    return (\n      <div className='thanks fp-noscroll section'>\n          <div className='title' ref={node => this.elements.push(node)} data-animation='fadeInRight'> {data.title} </div> \n          <div className='email' ref={node => this.elements.push(node)} data-animation='fadeInLeft'>\n            <a href={`mailto:${data.links.email} `}> {data.links.email} </a>\n          </div>\n          <div className='phone' ref={node => this.elements.push(node)} data-animation='fadeInRight'>\n            <a href={`tel:${data.links.mobile} `}> {data.links.mobile} </a>\n          </div>\n\n        <div className='footer'>\n          <div className='subtitle' ref={node => this.elements.push(node)} data-animation='flipInX'> {data.subtitle} </div>\n          <div className='contacts'>\n            <div className='back' ref={node => this.elements.push(node)} data-animation='fadeInUp' onClick={() => this.props.onClick()}> go back up </div>\n            </div>\n        </div>\n      </div>      \n    )\n  }\n}\n\nexport default Thanks\n","import React from 'react'\nimport { animate } from '../libs/animateNode';\n\nconst elements = []\n\nconst About = ({ data, active }) => {\n  animate(active, elements)\n  \n  return (\n    <div className='about section'>\n      <div className='wrapper'> \n        <div className='title' data-animation='fadeInRight' ref={node => elements.push(node)}> {data.title} </div>\n        <div className='subtitle' data-animation='fadeInRight'  ref={node => elements.push(node)}> {data.subtitle} </div>\n        <div className='description'> \n          <div className='item'>\n            <div className='description-title' data-animation='fadeInRight' ref={node => elements.push(node)}> {data.text.column1.title} </div>\n            <div className='text' data-animation='fadeInRight' ref={node => elements.push(node)}> \n              {\n                data.text.column1.paragraphs.map((item, key) => (\n                  <div key={key}> {item} </div>\n                ))\n              }\n            </div>\n            <div className='button mdn' data-animation='fadeInRight' ref={node => elements.push(node)}>\n              <a target='_blank' rel='noopener noreferrer' href={data.cvLink}> Download full cv (pdf) </a>\n            </div>\n          </div>\n          <div className='item' >\n            <div className='description-title' data-animation='fadeInRight' ref={node => elements.push(node)}> {data.text.column2.title} </div>\n            <div className='text' data-animation='fadeInRight' ref={node => elements.push(node)}> \n              {\n                data.text.column2.paragraphs.map((item, key) => (\n                  <div key={key}> {item} </div>\n                ))\n              }\n              <div className='button mdb' data-animation='fadeInRight' ref={node => elements.push(node)}>\n                <a target='_blank' rel='noopener noreferrer' href={data.cvLink}> Download full cv (pdf) </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import React, { PureComponent } from 'react'\n\nexport class Pagination extends PureComponent {\n  render() {\n    const { pages } = this.props\n    return (\n      <div className='pagination'>\n        {\n          [...Array(pages)].map((_, i) =>  (\n            <div className={`item ${this.props.active === i + 1 ? 'active' : '' }`} key={i} onClick={() => this.props.onClick(i + 1)}> </div>\n          ))\n        } \n      </div>\n    )\n  }\n}\n\nexport default Pagination\n","import React, { Component } from 'react'\nimport CloudViewer from './../libs/cloudViewer.js'\n\nclass Project extends Component {\n  state = {\n    openedImage: null,\n    activeSlide: 0,\n  }\n\n  componentDidMount() {\n    this.setViewer()\n  }\n\n  setSlide(activeSlide) {\n    this.props.fullpageApi.moveTo(this.props.section + 1, activeSlide)\n    this.setState({ activeSlide })\n  }\n\n  componentDidUpdate() {\n    const { data, slideChanges, section, isSectionActive} = this.props\n    const { activeSlide } = this.state\n    const isActiveProject = slideChanges ? section === slideChanges.origin.index : false\n\n    if(isActiveProject && activeSlide !== slideChanges.direction.index) {\n      this.setState({ activeSlide: slideChanges.direction.index })\n    }\n\n    const isImage = data.images[activeSlide - 1]\n    \n    if(!isImage & this.state.openedImage) {\n      this.setState({ openedImage: false })\n    }\n\n    if (isSectionActive && activeSlide === 0 && this.viewer) {\n      if (this.viewer) this.viewer.enabled = true\n    } else {     \n      if (this.viewer) this.viewer.enabled = false\n    }\n  }\n\n  setViewer() {\n    const { data, active } = this.props\n\n    setTimeout(() => {\n      this.viewer = new CloudViewer(this._canvas, f=>f, data['fist-slide-color'], [data.model], active)\n    }, 0)\n  }\n\n  render() {\n    const { data } = this.props\n    const { images, title, description } = this.props.data\n    const { activeSlide, openedImage } = this.state\n    \n    return (\n      <div className={`section fp-noscroll projects`} ref={node => this._element = node} data-slides={`${activeSlide === 0 ? 'first' : ''}${activeSlide === images.length + 1 ? 'last' : ''}`} >\n        <div className='slide fp-noscroll'>\n          <div className='first-slide'>\n            <div className='main-title'> {data.title} </div>\n            <div ref={node => this._canvas = node} className='project-scene'> </div>\n          </div>\n        </div>\n        \n        {images.map((item, i) =>\n          <div key={i} className='slide fp-noscroll'> \n            <div className='image-slide' style={{ backgroundImage: `url(${item})` }}>\n            </div>\n          </div>)\n        }\n\n        <div className='slide descr-wrapper fp-noscroll' style={{background: data['last-slide-color']}}>\n          <div className='descr-slide' >\n            <div className='title' data-animation='projectsTitle'> {title} </div>\n            <div className='descr'>\n              {description}\n            </div>\n          </div>\n        </div>\n        \n        <div className='pagination-list'>\n          {[...images, ')', ')'].map((_, i) => \n            <div key={i} onClick={() => this.setSlide(i)} className={`item ${activeSlide === i ? 'active' : '' }`}>\n              <div/>\n            </div>\n          )}\n        </div>\n\n        {activeSlide !== 0 && activeSlide !== images.length + 1 ? \n          <div className='fit-image' onClick={() => this.setState({ openedImage: true })}></div>\n          : ''\n        }\n\n        {openedImage ? \n          <div className='image-popup'>\n            <div className='image-popup-close' onClick={() => this.setState({ openedImage: false })}> \n              <div></div>\n              <div></div>\n            </div>\n            <img src={images[activeSlide - 1]} alt='project img'/>\n          </div> : ''\n        }\n\n      </div>\n\n    )\n  }\n}\n\nconst Projects = ({ data, onLoad, fullpageApi, slideChanges, active }) => (\n  <>\n    {data.map((project, i) => (\n      <Project onLoad={onLoad} data={project} slideChanges={slideChanges} isSectionActive={active === i + 2} fullpageApi={fullpageApi} key={i} section={i + 1}/>\n    ))}\n  </>\n)\n\nexport default Projects\n","import React, { PureComponent } from 'react'\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport 'fullpage.js/vendors/scrolloverflow'\nimport 'fullpage.js/dist/fullpage.extensions.min.js'\n\nimport Home from './Home';\nimport Logo from './Logo';\nimport Burger from './Burger';\nimport Thanks from './Thanks';\nimport About from './About';\nimport Pagination from './Pagination';\nimport Projects from './Projects';\nimport Loader from './Loader';\n\nexport class App extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.goToSection = this.goToSection.bind(this)\n    this.goToProject = this.goToProject.bind(this)\n    this.unMountLoader = this.unMountLoader.bind(this)\n    this.scroll = this.scroll.bind(this)\n    this.fullpageApi = null\n  }\n\n  activeSlide = 0\n  \n  state = {\n    contentLoaded: false,\n    homeLoaded: false,\n  }\n  \n  componentDidMount() {\n    this.props.fetchData()\n  }\n  \n  goToSection(i) {\n    this.props.setCurrentSection(i)\n    this.fullpageApi.moveTo(i)\n  } \n\n  goToProject(i) {\n    this.props.setProject(i)\n  }\n\n  unMountLoader() {\n    this.setState({ contentLoaded: true })\n  }\n\n  scroll(destination) {\n    this.props.setCurrentSection(destination.index + 1)\n  }\n\n  toggleLoader = (open = true) => {\n    this.setState({ homeLoaded: open })\n  }  \n\n  render() {\n    const { sections, setProject, data, projects } = this.props\n    const { goToSection } = this\n    const { contentLoaded, homeLoaded } = this.state\n    if(data && (data.title !== document.title)) document.title = data.title\n\n    return ( \n      <>\n        { homeLoaded && contentLoaded ? '' : <Loader loaded={(!!data && homeLoaded)} unMount={this.unMountLoader}/> }\n        { data ? \n            <>\n              <Logo/>\n              <Burger setProject={this.goToProject} projectsData={data.projects} projects={projects} onClick={this.goToSection} active={sections.currentSection}/>\n              <Pagination pages={data.projects.length + 3} onClick={i => this.goToSection(i)} active={sections.currentSection}/>\n              <ReactFullpage\n                scrollOverflow={true}\n                scrollHorizontally={true}\n                onLeave={(origin, destination) => {\n                  this.scroll(destination)\n                  this.setState({ blockSlider: false })\n                }}  \n                onSlideLeave={(origin, destination, direction) => {\n                  if (destination.isFirst && direction.isLast) {\n                    return false \n                  } else if (destination.isLast && direction.isFirst) {\n                    // this.fullpageApi.moveTo(this.fullpageApi.getActiveSection().index + 1)\n                    return false\n                  }\n\n                  this.slideChanges = {origin, destination, direction}\n                }}  \n                render={\n                  ({ fullpageApi }) => {\n                    if(fullpageApi) this.fullpageApi = fullpageApi\n                    window.fullpageApi = fullpageApi\n                    return (\n                      <div>\n                        <Home data={data.home} aboutSectionId={data.projects.length + 2} setSection={goToSection} onLoad={this.toggleLoader} active={sections.currentSection === 1}/>\n                        <Projects data={data.projects} fullpageApi={fullpageApi} slideChanges={this.slideChanges} onLoad={this.toggleLoader} isSectionActive={sections.currentSection === 2} active={sections.currentSection } setProject={setProject} />\n                        <About data={data.about} active={sections.currentSection === 3}/>\n                        <Thanks data={data.last} onClick={(i) => goToSection(i)} active={sections.currentSection === 4}/>\n                      </div>\n                    )\n                  }\n                }\n              /> \n            </> \n          : '' }\n      </>\n    )\n  }\n}\n\nexport default App\n"," const API_URL = './data.json'\n \n export default {\n  API_URL\n }\n","import { connect } from 'react-redux'\n\nimport App from '../components/App'\nimport { setCurrentSection } from '../actions/SectionsActions';\nimport { fetchData } from '../actions/DataActions';\nimport { setCurrentProject, setCurrentSlide } from '../actions/ProjectsActions';\n\nexport default connect(\n  state => \n    ({\n      sections: state.sections,\n      data: state.data.data,\n      projects: state.projects\n    }),\n  dispatch => \n    ({\n      setCurrentSection(section) {\n        dispatch(setCurrentSection(section))\n      },\n      fetchData() {\n        dispatch(fetchData())\n      },\n      setProject(project) {\n        dispatch(setCurrentProject(project))\n      },\n      setCurrentSlide(slide, project) {\n        dispatch(setCurrentSlide(slide, project))\n      }\n\n    })\n)(App)\n","import ActionTypes from './../constants/ActionsTypes'\n\nconst setCurrentSection = section => \n  ({\n    type: ActionTypes.SET_SECTION,\n    section\n  })\n\nexport {\n  setCurrentSection,\n}","import ActionTypes from './../constants/ActionsTypes'\nimport { callApi } from '../libs/callApi';\nimport Api from './../constants/Api'\n\nconst fetchDataFail = error => \n  ({\n    type: ActionTypes.FETCH_DATA_FAIL,\n    payload: { error }\n  })\n\nconst fetchDataRequest = () => \n  ({\n    type: ActionTypes.FETCH_DATA_REQUEST\n  })\n\nconst fetchDataSucess = data => \n  ({\n    type: ActionTypes.FETCH_DATA_SUCCESS,\n    payload: { data }\n  })\n\nconst fetchData = () => async dispatch => {\n  dispatch(fetchDataRequest())\n  const res = await callApi(Api.API_URL)\n\n  res.json ? \n    dispatch(fetchDataSucess(res.json))\n    :\n    dispatch(fetchDataFail(res.error))\n}\n\nexport {\n  fetchData\n}","const callApi = (url, options) =>\n  fetch(url, options)\n    .then(\n      response => (response.ok\n        ? response.json()\n        : Promise.reject(response.text())\n      ),\n      error => Promise.reject(error))\n    .then(\n      json => ({ json }),\n      error => ({ error })\n    )\n    .catch(error => console.log({ error }))\n\nexport {\n  callApi\n}","import ActionTypes from './../constants/ActionsTypes'\n\nconst setCurrentProject = project => \n  ({\n    type: ActionTypes.SET_PROJECT,\n    project\n  })\n\nconst setCurrentSlide = (slide, project) => \n  ({\n    type: ActionTypes.SET_PROJECT_SLIDE,\n    project,\n    slide\n  })\n\nexport {\n  setCurrentProject,\n  setCurrentSlide\n}","import './style/main.sass'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\nimport AppContainer from './containers/AppContainer';\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppContainer />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}