(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{28:function(e,t,n){e.exports=n(44)},29:function(e,t,n){},44:function(e,t,n){"use strict";n.r(t);n(29);var a=n(0),i=n.n(a),o=n(13),r=n.n(o),l=n(15),s=n(9),c=n(23),u=n(8),d="SET_SECTION",m="SET_DATA",h="FETCH_DATA_REQUEST",v="FETCH_DATA_FAIL",f="FETCH_DATA_SUCESS",p="SET_PROJECT_SLIDE",y={currentSection:1},g=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:y,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case d:return Object(u.a)({},e,{currentSection:t.section});default:return e}},x={data:null,loading:!1,active:null,error:null},S=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case h:return Object(u.a)({},e,{loading:!0,error:null,data:null});case f:return Object(u.a)({},e,{loading:!1,error:!1,data:t.payload.data});case v:return Object(u.a)({},e,{loading:!1,error:t.payload.error,data:null});default:return e}},b={active:0,activeSlide:0},P=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:b,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case m:return Object(u.a)({},e,{active:t.project,activeSlide:0});case p:return Object(u.a)({},e,{activeSlide:t.slide});default:return e}},E=Object(s.combineReducers)({sections:g,data:S,projects:P}),L=n(24),M=Object(s.createStore)(E,Object(c.composeWithDevTools)(Object(s.applyMiddleware)(L.a))),A=n(11),w=n.n(A),j=n(14),C=n(2),k=n(3),z=n(6),O=n(5),F=n(7),N=n(4),I=n(25),T=n.n(I);n(42),n(43);function _(e,t,n,a){e&&t.forEach(function(e){e&&function(e,t,n,a){var i=e;function o(){!a&&i.classList.remove("animated"),!a&&i.classList.remove(t),"function"===typeof n&&n()}i.classList.add("animated",t),i.addEventListener("animationend",function(){return o()},!1),i.addEventListener("webkitAnimationEnd",function(){return o()},!1),i.addEventListener("webkitanimationend",function(){return o()},!1),i.addEventListener("animationend",function(){return o()},!1),i.addEventListener("animationiteration",function(){return setTimeout(function(){return o()},500)},!1)}(e,e.dataset.animation,n,a)})}var R=n(1),U=n(26);var D,B=function(){function e(t){Object(C.a)(this,e),this.config=t,this.onBeforeRenderConfig={},this.shaderForMaterial=null,this.shaderMaterial=null,this.meshMaterial=[],this.shaderGeometry=null,this.shaderMesh=null,this.shaderMesh2=null,this.camera=null,this.raycaster=new R.Raycaster,this.mouseXY=new R.Vector2,this.mouseLastUpdate=Date.now(),this.mouseStandByAction=!1,this.mouseStandByPosition=!1,this.mouseOldestPosition=new R.Vector2,this.mouseHistory=[],this.mouseHistoryMax=12;for(var n=0;n<this.mouseHistoryMax;n++)this.mouseHistory.push(new R.Vector2);this.animationFuntction=function(){},this.init()}return Object(k.a)(e,[{key:"init",value:function(){var e=this;this.shaderForMaterial=function(e){var t=e.pathCount;return{uniforms:{eye:{value:new R.Vector3},raycastPoint:{value:new R.Vector3},raycastedPoints:{value:[new R.Vector3]},sunDirection:{value:new R.Vector3},maxDistance:{value:4},pointSize:{value:8},timeScaleFactor:{value:.003},uvScaleFactor:{value:.003},sizeFactor:{value:3.2},alpha:{value:.2},lines:{value:20},time:{value:0},size:{value:122.3},textureMatrix:{value:new R.Matrix4}},vertexShader:"\n            uniform float sizeFactor;\n            uniform float uvScaleFactor;\n            uniform float timeScaleFactor;\n            uniform float pointSize;\n            \n            uniform mat4 textureMatrix;\n            uniform float maxDistance;\n            uniform float time;\n            uniform float alpha;\n            uniform vec3 eye;\n            \n            varying vec4 worldPosition;\n            \n            varying vec2 vUv;\n            varying vec4 vColor;\n            varying float distanceToMouseAlpha;\n            varying float distanceToRaycastPoint;\n            \n            float PI = 3.141592653589793;\n            \n            uniform vec3 raycastPoint;\n            uniform vec3 raycastedPoints[ ".concat(t," ];\n            const float pathCount = ").concat(t,".0; \n            const int pathCountInt = ").concat(t,"; \n            \n            float distanceBetweenVec3( vec3 v1, vec3 v2 ){\n                float dx = v1.x - v2.x;\n                float dy = v1.y - v2.y;\n                float dz = v1.z - v2.z;\n                float result = sqrt( dx * dx + dy * dy + dz * dz );\n                return result;\n            }\n            \n            vec3 convertToNormal( vec3 src ){\n                return vec3( ( 0.5 - src.x ) * 2.0, ( 0.5 - src.y ) * 2.0, ( 0.5 - src.z ) * 2.0 );\n            }\n            \n            float getMod( float a, float b ) {\n                float result =  a - ( b * floor( a / b ) );\n                return result;\n            }\n            \n            vec4 getMixedColor( sampler2D tex1, sampler2D tex2, vec2 _uv ){\n                    vec4 mixedColor = ( texture2D( tex1, _uv ) + texture2D( tex2, _uv ) ) * 0.5;\n                    return mixedColor;\n            }\n            \n            \n            vec3 lt_ln_to_xyz( float lt, float ln, float radius ){\n                vec3 resultXYZ = vec3(\n                    radius * cos(lt) * cos(ln),\n                    radius * cos(lt) * sin(ln),\n                    radius * sin(lt)\n                );\n                return resultXYZ;\n            }\n            \n            vec2 xyz_to_lt_ln( vec3 pos ){\n                return vec2( \n                    acos( pos.y / sqrt( pos.x * pos.x + pos.z * pos.z) ), \n                    atan( pos.x / pos.z ) \n                );\n            }\n            \n            vec3 slerp(vec3 start, vec3 end, float t) {  \n                    // Dot product - the cosine of the angle between 2 vectors.  \n                    float dot = dot(start, end);\n                    // Clamp it to be in the range of Acos() \n                    // This may be unnecessary, but floating point  \n                    // precision can be a fickle mistress.    \n                    dot = clamp(dot, -1.0, 1.0);  \n                    // Acos(dot) returns the angle between start and end,   \n                    // And multiplying that by time returns the angle between   \n                    // start and the final result.   \n                    float theta = acos(dot) * t;\n                    vec3 RelativeVec = normalize(end - start * dot); \n                    return ((start * cos(theta)) + (RelativeVec * sin(theta)));\n            }\n            \n            vec3 aproximatedRaycastedPoint(){\n            \n                vec3 finalPoint = vec3( 0.0 );\n                \n                float floatIterator = 0.0;\n                float totalMultiplyFactor = 0.0;\n                \n                for( int i = 0; i < pathCountInt; i++ ){\n                    float nextMultiplyFactor = ( floatIterator / pathCount );\n                    totalMultiplyFactor += nextMultiplyFactor;\n                    finalPoint += raycastedPoints[ i ] * nextMultiplyFactor;\n                    floatIterator += 1.0;\n                }\n                finalPoint = finalPoint / totalMultiplyFactor;\n                return finalPoint;\n            }\n            \n            vec4 getNearestRaycastedPoint( vec3 position ){\n                vec4 finalPoint = vec4( 0.0 );\n                float lastDistance = 99999999999.0;\n                for( int i = 0; i < pathCountInt; i++ ){\n                    float nextDistance = distanceBetweenVec3( position.xyz , raycastedPoints[ i ] );\n                    if( nextDistance < lastDistance ){\n                        lastDistance = nextDistance;\n                        finalPoint =  vec4( raycastedPoints[ i ], abs( sin( float( i ) / pathCount * -PI / 2.0 ) ) );\n                    }\n                }\n                return finalPoint;\n            }\n            \n            vec2 getLatLngMod( float latFactor, float lngFactor ){\n                return vec2( getMod(  latFactor,  PI * 2.0  ), -PI/ 2.0 + sin( getMod( lngFactor,  PI  ) ) * PI  );\n            }\n            \n            void main() {\n            \n            \tvUv = uv;\n            \t\n                vec3 normaledEye = normalize( eye );\n            \t\n            \tvec4 pixelPosition = modelMatrix * vec4( position, 1.0 );\n            \tvec4 mvStartPosition = pixelPosition;\n            \tworldPosition = pixelPosition;\n            \t\n            \tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n            \tvec4 tempNearest = getNearestRaycastedPoint( pixelPosition.xyz );\n            \ttempNearest.x = -50.0 + 100.0 * sin( PI/2.0  * getMod( time * timeScaleFactor, 1.0 ) );\n            \tvec4 nearestRaycasted = vec4(\n            \t    tempNearest.x - pixelPosition.y,\n            \t    pixelPosition.y,\n            \t    0.0,\n            \t    0.001\n            \t);\n            \tvec3 _raycastPoint = nearestRaycasted.xyz;\n            \tvec3 flatPixelPosition = vec3( pixelPosition.xy, 0.0 );\n            \tdistanceToRaycastPoint = distanceBetweenVec3( flatPixelPosition.xyz , _raycastPoint );\n            \n                float distanceFactor;\n                vec4 finalGlPosition;\n            \n                float distanceAlpha = 1.0 - distanceToRaycastPoint / maxDistance;\n                distanceFactor = distanceAlpha;\n                distanceToMouseAlpha = distanceAlpha;\n                float timeScaleFactorAfter = timeScaleFactor * 0.7;\n                float pixelPScaleFactor = 0.2;\n                \n                float multiplyFactorForRaycastedPath = 1.0;\n                if( distanceFactor < 0.12 ){\n                    distanceFactor = 0.12;\n                    timeScaleFactorAfter = timeScaleFactor;\n                    pixelPScaleFactor = 0.2;\n                } else {\n                    distanceFactor = 0.12 + (distanceFactor - 0.12) * 0.3;\n                    timeScaleFactorAfter = timeScaleFactor;\n                    pixelPScaleFactor = 0.3;\n                }\n                \n                vec2 currentLtLn = xyz_to_lt_ln(  vec3( 1.0, 1.0, 0.0 ) );\n                \n                float ltFactor = ( position.x + position.z );\n                float lnFactor = ( position.z - position.y );\n                \n                currentLtLn = getLatLngMod(\n                    currentLtLn.x + ltFactor * pixelPScaleFactor + ( time * timeScaleFactorAfter * 0.5 ) * PI * 2.0,\n                    currentLtLn.y + lnFactor * pixelPScaleFactor + ( time * timeScaleFactorAfter ) *  PI\n                );\n                \n                vec3 positionOfLtLn_default = lt_ln_to_xyz( \n                    currentLtLn.x, \n                    currentLtLn.y, \n                    distanceFactor * 2.5 * multiplyFactorForRaycastedPath\n                );\n                \n                vec3 positionOfLtLn_for_pointer = lt_ln_to_xyz( \n                    currentLtLn.x, currentLtLn.y, \n                    distanceFactor * 2.5 * abs( sin( time * timeScaleFactor ) )\n                );\n                \n                vec3 positionOfLtLn;\n                \n                if( distanceFactor > 0.05 ){\n                    float clipFactor = 0.0;\n                    float softFactor = 0.35;\n                    float test1 = ( distanceFactor - clipFactor ) * softFactor;\n                    float test2 = 0.0;\n                    if( test1 > 0.0 ){  test2 = sin( ( test1 ) * 2.0 * PI / 2.0 ); }\n                    positionOfLtLn = slerp( positionOfLtLn_default, positionOfLtLn_default, test2 );\n                } else {\n                    positionOfLtLn = positionOfLtLn_default;\n                }\n                \n                pixelPosition.xyz += positionOfLtLn;\n                vec4 preGlPosition =  projectionMatrix * modelViewMatrix * pixelPosition;\n                finalGlPosition = preGlPosition;\n                    \n                gl_Position =  finalGlPosition;\n                vColor = normalize( finalGlPosition );\n                \n                if ( gl_Position.w > 0.0 ) {\n                    gl_PointSize = 12.0 * pointSize / gl_Position.w + ( pointSize * distanceFactor * 0.5 );\n                } else {\n                    gl_PointSize = 3.0;\n                }\n                \n            \t\n            \t\n            }\n        "),fragmentShader:"\n            uniform float alpha;\n            uniform float lines;\n            uniform float time;\n            uniform float size;\n            uniform vec3 eye;\n            uniform vec3 sunDirection;\n            uniform float timeScaleFactor;\n\n            varying vec4 worldPosition;\n            varying vec2 vUv;\n            varying vec4 vColor;\n            varying float distanceToMouseAlpha;\n            varying float distanceToRaycastPoint;\n            \n           \n            const float gridSize = 3.0;\n            const float pixelsPerUnit = 32.0;\n            const vec2 resolution = vec2( 1024.0, 1024.0 );\n            \n            const vec3 tinLineColor = vec3( 1.0, 1.0, 1.0 );\n            const vec3 wideLineColor = vec3( 1.0, 1.0, 0.6 );\n            \n            const float tinLineWidth = 32.0;\n            const float wideLineWidth = 12.0;\n            \n            const float tinLineOpacity = 1.0;\n            const float wideLineOpacity = 1.0;\n            \n            float PI = 3.141592653589793;\n     \n            float getTimeLineWidthScale(){\n                // return ( tinLineWidth / 2.0 ) + abs( sin( time * 0.13 ) * tinLineWidth );\n                return tinLineWidth;\n            }\n     \n            float getMod( float a, float b ) {\n                float result =  a - ( b * floor( a / b ) );\n                return result;\n            }\n            \n            bool checkIsLine(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n            \n                bool lineAvailableX = gridAlphaModLeft.x < lineAlphaSize.x;\n                // bool lineAvailableX = false;\n                bool lineAvailableY = false;\n                // bool lineAvailableY = gridAlphaModLeft.y < lineAlphaSize.y;\n            \n                return lineAvailableX || lineAvailableY || false;\n            }\n            \n            bool checkIsLine2(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n            \n                bool lineAvailableX = gridAlphaModLeft.x < lineAlphaSize.x;\n                bool lineAvailableY = gridAlphaModLeft.y < lineAlphaSize.y;\n            \n                return lineAvailableX || lineAvailableY || false;\n            }\n            \n            bool checkIsPoint(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n            \n                bool lineAvailableX = gridAlphaModLeft.x < lineAlphaSize.x;\n                bool lineAvailableY = gridAlphaModLeft.y < lineAlphaSize.y;\n            \n                return  ( lineAvailableX && lineAvailableY ) || false;\n            }\n            \n            float checkLineOpacityByX(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n                \n                float nextOpacity = sin( gridAlphaModLeft.x / lineAlphaSize.x * 3.14 );\n                return nextOpacity;\n            }\n            \n            bool checkIsCenter(){\n            \n                bool isCenterX = abs(\n                   ( vUv.x * resolution.x * pixelsPerUnit ) - ( 0.5 * resolution.x * pixelsPerUnit )\n                ) < ( wideLineWidth * .5 );\n            \n                bool isCenterY = abs(\n                    ( vUv.y * resolution.y * pixelsPerUnit ) - ( 0.5 * resolution.y * pixelsPerUnit )\n                ) < ( wideLineWidth * .5 );\n            \n                if( isCenterX ){\n                    return true;\n                } else if( isCenterY ) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n     \n            vec4 getMixedColor( sampler2D tex1, sampler2D tex2, vec2 _uv ){\n                    vec4 mixedColor = ( texture2D( tex1, _uv ) + texture2D( tex2, _uv ) ) * 0.5;\n                    return mixedColor;\n            }\n            \n            highp float distanceBetween( vec2 vector1, vec2 vector2 ){\n                float xLength = vector1.x - vector2.x;\n                float yLength = vector1.y - vector2.y;\n                return sqrt( xLength * xLength + yLength * yLength );\n            }\n            \n            float distanceToLine(vec2 p1, vec2 p2, vec2 point) {\n                float a = p1.y-p2.y;\n                float b = p2.x-p1.x;\n                return abs(a*point.x+b*point.y+p1.x*p2.y-p2.x*p1.y) / sqrt(a*a+b*b);\n            }\n            \n            float drawLine(vec2 p1, vec2 p2) {\n            \n              vec2 resolution = vec2( 1024., 1024. );\n              float Thickness = 15.0;\n              \n              vec2 uv = gl_FragCoord.xy / resolution.xy;\n            \n              float a = abs(distanceBetween(p1, uv));\n              float b = abs(distanceBetween(p2, uv));\n              float c = abs(distanceBetween(p1, p2));\n            \n              if ( a >= c || b >=  c ) return 0.0;\n            \n              float p = (a + b + c) * 0.5;\n            \n              // median to (p1, p2) vector\n              float h = 2. / c * sqrt( p * ( p - a) * ( p - b) * ( p - c));\n            \n              return mix( 1.0, .0, smoothstep( 0.5 * Thickness, 1.5 * Thickness, h ) );\n            }\n            \n            void main() {\n            \n                vec2 pc = ( gl_PointCoord - 0.5 ) * 2.0;\n                vec4 color1 = vColor;\n                \n                float r = 0.0, delta = 0.0, alpha = 1.0;\n                vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n                r = dot(cxy, cxy);\n                if ( r > 1.0 ) { discard; }\n            \n                color1.xyz = vec3( 0.7 );\n                \n                // float transparentFactor = 1. - r;\n                float transparentFactor = 1.;\n                color1.a = transparentFactor;\n                color1.xyz *= 0.9 + 0.1 * r;\n                \n                if( distanceToMouseAlpha < 0.0 ){\n                    gl_FragColor = color1;\n                } else {\n                    gl_FragColor = color1;\n                }\n\n                // gl_FragColor = vec4( 1.0 ); \n            }\n        "}}({pathCount:this.config.pathCount}),this.shaderForMaterial.uniforms.lines.value=3,this.shaderForMaterial.uniforms.time.value=0,this.shaderForMaterial.uniforms.timeScaleFactor.value=.003;for(var t=[],n=0;n<this.config.pathCount;n++)t.push(new R.Vector3);this.shaderForMaterial.uniforms.raycastedPoints.value=t,this.shaderMaterial=new R.ShaderMaterial({uniforms:this.shaderForMaterial.uniforms,vertexShader:this.shaderForMaterial.vertexShader,fragmentShader:this.shaderForMaterial.fragmentShader,transparent:!0,side:R.BackSide}),this.shaderGeometry=new R.BufferGeometry;var a=[],i=!0,o=!1,r=void 0;try{for(var l,s=this.config.vertices[Symbol.iterator]();!(i=(l=s.next()).done);i=!0){var c=l.value;a.push(c.x),a.push(c.y),a.push(c.z)}}catch(d){o=!0,r=d}finally{try{i||null==s.return||s.return()}finally{if(o)throw r}}var u=new Float32Array(a);this.shaderGeometry.addAttribute("position",new R.BufferAttribute(u,3)),this.shaderMesh=new R.Points(this.shaderGeometry,this.shaderMaterial),console.log(this),this.initAnimationProperties(),this.shaderMesh.onBeforeRender=function(t,n,a,i,o,r){e.config.onBeforeRender&&e.config.onBeforeRender(t,n,a,i,o,r),e.onBeforeRenderConfig={renderer:t,scene:n,camera:a,geometry:i,material:o,group:r}}}},{key:"animate",value:function(){this.onBeforeRenderConfig.camera&&(this.camera=this.onBeforeRenderConfig.camera,this.animationFuntction(),this.shaderMaterial.uniforms.eye.value=this.camera.position.clone(),this.shaderMaterial.uniforms.time.value+=1,this.shaderMaterial.needsUpdate=!0)}},{key:"initAnimationProperties",value:function(){for(var e=this,t=[],n=0;n<this.config.pathCount;n++)t.push(new R.Vector3);this.shaderMaterial.uniforms.raycastedPoints.value=t,this.animationFuntction=function(){Date.now()>e.mouseLastUpdate+3300&&(e.mouseStandByAction=!0),e.mouseStandByAction&&(e.mouseStandByPosition=e.mouseStandByPosition+1<e.mouseHistoryMax?e.mouseStandByPosition+1:0,e.useUpdateMouseAction(e.mouseHistory[e.mouseStandByPosition]))}}},{key:"remove",value:function(){this.shaderMesh.parent.remove(this.shaderMesh),this.shaderMesh.geometry.dispose(),this.shaderMesh.material.dispose(),this.shaderMaterial.dispose(),this.shaderGeometry.dispose(),this.shaderMaterial=null,this.shaderGeometry=null}},{key:"raycastModel",value:function(){return this.raycaster.setFromCamera(this.mouseXY,this.camera),this.raycaster.intersectObject(this.shaderMesh)}},{key:"useUpdateMouseAction",value:function(e){this.mouseXY.copy(e)}},{key:"updateMouseNormal",value:function(e){if(this.mouseLastUpdate=Date.now(),this.mouseStandByAction=!1,this.mouseStandByPosition=0,this.mouseHistory.push(e.clone()),this.mouseHistory.length>this.mouseHistoryMax){var t=this.mouseHistory.shift();this.mouseOldestPosition.copy(t)}this.useUpdateMouseAction(e)}}]),e}(),H=n(27),W=n.n(H),G=function(){var e=/iPad|iPhone|iPod|android/i.test(navigator.userAgent||navigator.platform);return console.log(navigator.userAgent,navigator.platform,e),console.log(e),e},V=function(){function e(t,n,a,i,o){var r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:30;Object(C.a)(this,e),this.cameraPositionZ=r,this.minimalNormalSize=400,this.initialModels=i,this.sceneElement=t,this.onLoad=n,this.activeProject=o,this.MainScene=new R.Scene,this.camera=new R.PerspectiveCamera(60,this.sceneElement.offsetWidth/this.sceneElement.offsetHeight,.1,1e3),this.renderer=new R.WebGLRenderer({alpha:!a}),this.camera.position.set(0,0,r),a&&this.setColor(a),this.cameraHolder=new R.Object3D,this.cameraHolder.add(this.camera),this.renderer.setPixelRatio(window.devicePixelRatio),this.sceneElement.appendChild(this.renderer.domElement),this.renderer.setSize(this.sceneElement.offsetWidth,this.sceneElement.offsetHeight),this.mouseNormal=new R.Vector2,this.render(),this.MainScene.add(this.cameraHolder),this.MeshControllers=[],this.enabled=!0,this.initMouse(),this.loadModel(this.initialModels[0],n),this.initResizer()}return Object(k.a)(e,[{key:"initResizer",value:function(){var e=this;window.addEventListener("resize",function(){e.renderer.setSize(e.sceneElement.offsetWidth,e.sceneElement.offsetHeight),e.camera.aspect=e.sceneElement.offsetWidth/e.sceneElement.offsetHeight,e.camera.updateProjectionMatrix();var t=Math.min(e.sceneElement.offsetWidth,e.sceneElement.offsetHeight);t<e.minimalNormalSize&&(e.camera.position.z=e.cameraPositionZ+e.cameraPositionZ*(1-t/e.minimalNormalSize))})}},{key:"setColor",value:function(e){this.renderer.setClearColor(e)}},{key:"loadModel",value:function(e,t){var n=this;return this.clearAllMeshControllers(),new Promise(function(a,i){n.obj_loader=new U.OBJLoader,n.obj_loader.load(e,function(e){var i=[],o=(new R.Vector3).fromArray([0,0,0]),r=(new R.Box3).expandByObject(e).getBoundingSphere(new R.Sphere),l=22.465094820192128/r.radius,s=o.sub(r.center);e.traverse(function(e){if(e.isMesh&&e.geometry&&"BufferGeometry"===e.geometry.type){var t=(new R.Geometry).fromBufferGeometry(e.geometry);i=i.concat(t.vertices)}});var c=!0,u=!1,d=void 0;try{for(var m,h=i[Symbol.iterator]();!(c=(m=h.next()).done);c=!0){var v=m.value;v.multiplyScalar(l),v.add(s),v.y+=11.232547410096064}}catch(f){u=!0,d=f}finally{try{c||null==h.return||h.return()}finally{if(u)throw d}}n.initShader(i,t),a(i)})})}},{key:"initShader",value:function(e,t){this.modelGeometry=e;var n=new B({pathCount:1,vertices:this.modelGeometry});n.shaderGeometry.rotateX(-Math.PI/2),this.MainScene.add(n.shaderMesh),G()&&(n.deviceOrientControll=new W.a(new R.Object3D)),n.defaultQ=n.shaderMesh.quaternion.clone(),this.MeshControllers.push(n),setTimeout(function(){return t(!0)},1e3)}},{key:"clearAllMeshControllers",value:function(){var e=!0,t=!1,n=void 0;try{for(var a,i=this.MeshControllers[Symbol.iterator]();!(e=(a=i.next()).done);e=!0){a.value.remove()}}catch(o){t=!0,n=o}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}this.MeshControllers=[],this.modelGeometry=[]}},{key:"renderAction",value:function(){this.renderer.render(this.MainScene,this.camera);var e=!0,t=!1,n=void 0;try{for(var a,i=this.MeshControllers[Symbol.iterator]();!(e=(a=i.next()).done);e=!0){var o=a.value;o.deviceOrientControll&&(o.deviceOrientControll.update(),o.shaderMesh.quaternion.copy(o.defaultQ.clone().slerp(o.deviceOrientControll.object.quaternion.clone(),.15))),o.updateMouseNormal(this.mouseNormal),o.animate();var r=function(e,t){return Math.sin(Math.PI/2*(e+t))},l=Math.PI/2;this.cameraHolder.rotation.x=r(o.mouseOldestPosition.y,0)*l*.05-.2,this.cameraHolder.rotation.y=-r(o.mouseOldestPosition.x,0)*l*.1}}catch(s){t=!0,n=s}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}}},{key:"render",value:function(){var e=this;requestAnimationFrame(function(){return e.render()}),this.enabled&&this.renderAction()}},{key:"initMouse",value:function(){var e=this;G()||document.body.addEventListener("mousemove",function(t){if(e.enabled){var n={x:t.pageX,y:t.pageY},a={w:e.sceneElement.offsetWidth,h:e.sceneElement.offsetHeight},i=new R.Vector2(n.x/a.w*2-1,1-n.y/a.h*2);e.mouseNormal.copy(i)}}),window.addEventListener("deviceorientation",function(t){e.enabled},!1)}}]),e}(),X=function(e){function t(e){var n;return Object(C.a)(this,t),(n=Object(z.a)(this,Object(O.a)(t).call(this,e))).elements=[],n}return Object(F.a)(t,e),Object(k.a)(t,[{key:"componentWillMount",value:function(){var e=this,t=this.props,n=t.data,a=t.onLoad;setTimeout(function(){e.viewer||(e.viewer=new V(e._canvas,function(){return a(!0)},null,[n.model,n.model_small]))},0)}},{key:"render",value:function(){var e=this,t=this.props,n=t.data,a=t.active,o=t.setSection;return _(a,this.elements),this.viewer&&(this.viewer.enabled=!!a),i.a.createElement("div",{className:"home fp-noscroll section"},i.a.createElement("div",{style:{backgroundColor:n.color},ref:function(t){return e._canvas=t},id:"homescene",className:"scene"}," "),i.a.createElement("div",{ref:function(t){return e.elements.push(t)},"data-animation":"fadeInRight",className:"title"},i.a.createElement("div",null,"My name is ",i.a.createElement("span",{onClick:function(){return o(3)}},"Kuba"),", ",i.a.createElement("br",null),"I do cool sh*t & ",i.a.createElement("br",null)," this is my ",i.a.createElement("span",{onClick:function(){return o(2)}}," book "))),i.a.createElement("div",{className:"contacts"},i.a.createElement("div",{className:"wrapper"},i.a.createElement("div",{className:"email"},i.a.createElement("a",{className:"fadeInUp","data-animation":"fadeInUp",ref:function(t){return e.elements.push(t)},href:"mailto:".concat(n.links.email)}," ",n.links.email," ")),i.a.createElement("div",{className:"phone"},i.a.createElement("a",{className:"fadeInUp","data-animation":"fadeInUp",ref:function(t){return e.elements.push(t)},href:"tel".concat(n.links.mobile)}," ",n.links.mobile," ")))))}}]),t}(a.PureComponent),Y=function(){return i.a.createElement("div",{className:"animated fadeInLeft logo"})},q=function(e){function t(){var e,n;Object(C.a)(this,t);for(var a=arguments.length,i=new Array(a),o=0;o<a;o++)i[o]=arguments[o];return(n=Object(z.a)(this,(e=Object(O.a)(t)).call.apply(e,[this].concat(i)))).state={closed:!0},n.toggle=function(){n.setState(function(e){return{closed:!e.closed}})},n.scrollTo=function(e){n.toggle(),n.props.onClick(e)},n.scrollToProject=function(e){n.toggle(),n.props.onClick(2,!1),n.props.setProject(e)},n}return Object(F.a)(t,e),Object(k.a)(t,[{key:"render",value:function(){var e=this.state.closed,t=this.scrollTo,n=this.toggle,a=this.scrollToProject,o=this.props,r=o.active,l=o.projects,s=o.projectsData;return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"navbar ".concat(e?"closed":"")},i.a.createElement("div",{className:"navbar-logo"}," "),i.a.createElement("div",{className:"menu"},i.a.createElement("div",{className:"item ".concat(1===r?"active":""),onClick:function(){return t(1)}}," Start "),s.map(function(e,t){return i.a.createElement("div",{key:t,onClick:function(){return a(t)},className:"item ".concat(2===r&&l.active===t?"active":"")}," ",e.title," ")}),i.a.createElement("div",{className:"item ".concat(3===r?"active":""),onClick:function(){return t(3)}}," About me "))),i.a.createElement("div",{onClick:n,className:"burger animated fadeInRight ".concat(e?"":"active")},i.a.createElement("div",null),i.a.createElement("div",null),i.a.createElement("div",null)))}}]),t}(a.PureComponent),Z=function(e){function t(){var e,n;Object(C.a)(this,t);for(var a=arguments.length,i=new Array(a),o=0;o<a;o++)i[o]=arguments[o];return(n=Object(z.a)(this,(e=Object(O.a)(t)).call.apply(e,[this].concat(i)))).elements=[],n}return Object(F.a)(t,e),Object(k.a)(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.data;return _(t.active,this.elements),i.a.createElement("div",{className:"thanks fp-noscroll section"},i.a.createElement("div",{className:"title",ref:function(t){return e.elements.push(t)},"data-animation":"fadeInRight"}," ",n.title," "),i.a.createElement("div",{className:"email",ref:function(t){return e.elements.push(t)},"data-animation":"fadeInLeft"},i.a.createElement("a",{href:"mailto:".concat(n.links.email," ")}," ",n.links.email," ")),i.a.createElement("div",{className:"phone",ref:function(t){return e.elements.push(t)},"data-animation":"fadeInRight"},i.a.createElement("a",{href:"tel:".concat(n.links.mobile," ")}," ",n.links.mobile," ")),i.a.createElement("div",{className:"footer"},i.a.createElement("div",{className:"subtitle",ref:function(t){return e.elements.push(t)},"data-animation":"flipInX"}," ",n.subtitle," "),i.a.createElement("div",{className:"contacts"},i.a.createElement("div",{className:"back",ref:function(t){return e.elements.push(t)},"data-animation":"fadeInUp",onClick:function(){return e.props.onClick()}}," go back up "))))}}]),t}(a.Component),J=[],Q=function(e){var t=e.data;return _(e.active,J),i.a.createElement("div",{className:"about section"},i.a.createElement("div",{className:"wrapper"},i.a.createElement("div",{className:"title","data-animation":"fadeInRight",ref:function(e){return J.push(e)}}," ",t.title," "),i.a.createElement("div",{className:"subtitle","data-animation":"fadeInRight",ref:function(e){return J.push(e)}}," ",t.subtitle," "),i.a.createElement("div",{className:"description"},i.a.createElement("div",{className:"item"},i.a.createElement("div",{className:"description-title","data-animation":"fadeInRight",ref:function(e){return J.push(e)}}," ",t.text.column1.title," "),i.a.createElement("div",{className:"text","data-animation":"fadeInRight",ref:function(e){return J.push(e)}},t.text.column1.paragraphs.map(function(e,t){return i.a.createElement("div",{key:t}," ",e," ")})),i.a.createElement("div",{className:"button","data-animation":"fadeInRight",ref:function(e){return J.push(e)}},i.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:t.cvLink}," Download full cv (pdf) "))),i.a.createElement("div",{className:"item"},i.a.createElement("div",{className:"description-title","data-animation":"fadeInRight",ref:function(e){return J.push(e)}}," ",t.text.column2.title," "),i.a.createElement("div",{className:"text","data-animation":"fadeInRight",ref:function(e){return J.push(e)}},t.text.column2.paragraphs.map(function(e,t){return i.a.createElement("div",{key:t}," ",e," ")}))))))},K=n(16),$=function(e){function t(){return Object(C.a)(this,t),Object(z.a)(this,Object(O.a)(t).apply(this,arguments))}return Object(F.a)(t,e),Object(k.a)(t,[{key:"render",value:function(){var e=this;return i.a.createElement("div",{className:"pagination"},Object(K.a)(Array(4)).map(function(t,n){return i.a.createElement("div",{className:"item ".concat(e.props.active===n+1?"active":""),key:n,onClick:function(){return e.props.onClick(n+1)}}," ")}))}}]),t}(a.PureComponent),ee=function(e){function t(e){var n;return Object(C.a)(this,t),(n=Object(z.a)(this,Object(O.a)(t).call(this,e))).state={blockScroll:!1,openedImage:null},n.canvases=[],n.images=[],n}return Object(F.a)(t,e),Object(k.a)(t,[{key:"componentDidMount",value:function(){this.setViewer(),this.events=0}},{key:"componentDidUpdate",value:function(){var e=this.props,t=e.active,n=e.activeSlide;!e.data[t].images[n-1]&this.state.openedImage&&this.setState({openedImage:!1})}},{key:"setViewer",value:function(){var e=this,t=this.props,n=t.data,a=t.active;setTimeout(function(){e.viewer||(e.viewer=new V(e._canvas,function(){return e.setState({loader:!1})},n[a]["fist-slide-color"],[n[0].model],a))},0)}},{key:"render",value:function(){var e=this,t=this.props,n=t.isSectionActive,a=t.active,o=t.activeSlide,r=t.setCurrentSlide,l=t.data,s=t.onLoad,c=this.state.openedImage,u=l[a];return this.slidesLength=u.images.length+1,this.viewer&&(this.viewer.activeProject!==a&&(this.viewer.activeProject=a,this.viewer.loadModel(u.model,function(){return s(!0)}),this.viewer.setColor(u["fist-slide-color"]),setTimeout(function(){return s(!1)},0)),n&&0===o?this.viewer.enabled=!0:this.viewer.true=!1),i.a.createElement("div",{className:"section fp-noscroll projects",ref:function(t){return e._element=t},"data-slides":"".concat(u.images.length===o-1?"last":"").concat(0===o?"first":"")},i.a.createElement("div",{className:"slide fp-noscroll"},i.a.createElement("div",{className:"first-slide"},i.a.createElement("div",{className:"main-title"}," ",u.title," "),i.a.createElement("div",{ref:function(t){return e._canvas=t},className:"project-scene"}," "))),u.images.map(function(e,t){return i.a.createElement("div",{key:t,className:"slide fp-noscroll"},i.a.createElement("div",{className:"image-slide",style:{backgroundImage:"url(".concat(e,")")}}))}),i.a.createElement("div",{className:"slide descr-wrapper fp-noscroll",style:{background:u["last-slide-color"]}},i.a.createElement("div",{className:"descr-slide"},i.a.createElement("div",{className:"title","data-animation":"projectsTitle"}," ",u.title," "),i.a.createElement("div",{className:"descr"},u.description))),i.a.createElement("div",{className:"pagination-list"},[].concat(Object(K.a)(u.images),["s","s"]).map(function(e,t){return i.a.createElement("div",{key:t,onClick:function(){return r(t)},className:"item ".concat(o===t?"active":"")},i.a.createElement("div",null))})),0!==o&&o!==this.slidesLength?i.a.createElement("div",{className:"fit-image",onClick:function(){return e.setState({openedImage:!0})}}):"",c?i.a.createElement("div",{className:"image-popup"},i.a.createElement("div",{className:"image-popup-close",onClick:function(){return e.setState({openedImage:!1})}},i.a.createElement("div",null),i.a.createElement("div",null)),i.a.createElement("img",{src:u.images[o-1],alt:"project img"})):"")}}]),t}(a.Component),te=function(e){var t=e.loaded,n=e.unMount;return t&&_(t,[D],function(){n()}),i.a.createElement("div",{className:"loader",ref:function(e){return D=e},"data-animation":"fadeOut"},i.a.createElement("div",null))},ne=function(e){function t(e){var n;return Object(C.a)(this,t),(n=Object(z.a)(this,Object(O.a)(t).call(this,e))).state={contentLoaded:!1,blockSlider:!1,homeLoaded:!1},n.toggleLoader=function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];n.setState({homeLoaded:e})},n.goToSection=n.goToSection.bind(Object(N.a)(Object(N.a)(n))),n.goToSlide=n.goToSlide.bind(Object(N.a)(Object(N.a)(n))),n.goToProject=n.goToProject.bind(Object(N.a)(Object(N.a)(n))),n.unMountLoader=n.unMountLoader.bind(Object(N.a)(Object(N.a)(n))),n.scroll=n.scroll.bind(Object(N.a)(Object(N.a)(n))),n.fullpageApi=null,n}return Object(F.a)(t,e),Object(k.a)(t,[{key:"componentDidMount",value:function(){this.props.fetchData()}},{key:"goToSection",value:function(){var e=Object(j.a)(w.a.mark(function e(t){var n=arguments;return w.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(!(n.length>1&&void 0!==n[1])||n[1])){e.next=4;break}return e.next=4,this.setState({blockSlider:!0});case 4:this.props.setCurrentSection(t),this.fullpageApi.moveTo(t);case 6:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},{key:"goToSlide",value:function(e){this.props.setCurrentSlide(e),this.fullpageApi.moveTo(2,e)}},{key:"goToProject",value:function(e){this.goToSlide(0),this.props.setProject(e)}},{key:"unMountLoader",value:function(){this.setState({contentLoaded:!0})}},{key:"scrollSlider",value:function(e){var t=e.origin,n=e.destination,a=e.direction,i=e.scroll,o=this.props,r=o.projects,l=o.data.projects[r.active],s=l.images.length+1;if(1===t.index){if("up"===a&&0!==r.activeSlide)return this.fullpageApi.moveSlideLeft(),!1;if("down"===a&&l.activeSlide!==s){this.fullpageApi.moveSlideRight();var c="down"===a&&r.activeSlide===s;return c&&i(n),c}return i(n),!0}}},{key:"scroll",value:function(e){this.props.setCurrentSection(e.index+1)}},{key:"render",value:function(){var e=this,t=this.props,n=t.sections,a=t.setCurrentSlide,o=t.setProject,r=t.data,l=t.projects,s=this.goToSection,c=this.state,u=c.contentLoaded,d=c.homeLoaded;return r&&r.title!==document.title&&(document.title=r.title),i.a.createElement(i.a.Fragment,null,d&&u?"":i.a.createElement(te,{loaded:!!r&&d,unMount:this.unMountLoader}),r?i.a.createElement(i.a.Fragment,null,i.a.createElement(Y,null),i.a.createElement(q,{setProject:this.goToProject,projectsData:r.projects,projects:l,onClick:this.goToSection,active:n.currentSection}),i.a.createElement($,{onClick:function(t){return e.goToSection(t)},active:n.currentSection}),i.a.createElement(T.a,{scrollOverflow:!0,scrollHorizontally:!0,onLeave:function(t,n,a){e.scroll(n),e.setState({blockSlider:!1})},onSlideLeave:function(e,t,n){if(t.isLast&&n.isFirst)return!1;a(n.index)},render:function(t){var a=t.fullpageApi;return a&&(e.fullpageApi=a),i.a.createElement("div",null,i.a.createElement(X,{data:r.home,setSection:s,onLoad:e.toggleLoader,active:1===n.currentSection}),i.a.createElement(ee,{data:r.projects,onLoad:e.toggleLoader,isSectionActive:2===n.currentSection,active:l.active,setCurrentSlide:e.goToSlide,setProject:o,activeSlide:l.activeSlide}),i.a.createElement(Q,{data:r.about,active:3===n.currentSection}),i.a.createElement(Z,{data:r.last,onClick:function(){return s(1)},active:4===n.currentSection}))}})):"")}}]),t}(a.PureComponent),ae="./data.json",ie=Object(l.b)(function(e){return{sections:e.sections,data:e.data.data,projects:e.projects}},function(e){return{setCurrentSection:function(t){e(function(e){return{type:d,section:e}}(t))},fetchData:function(){e(function(){var e=Object(j.a)(w.a.mark(function e(t){var n;return w.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t({type:h}),e.next=3,fetch(ae,void 0).then(function(e){return e.ok?e.json():Promise.reject(e.text())},function(e){return Promise.reject(e)}).then(function(e){return{json:e}},function(e){return{error:e}}).catch(function(e){return console.log({error:e})});case 3:(n=e.sent).json?t((i=n.json,{type:f,payload:{data:i}})):t((a=n.error,{type:v,payload:{error:a}}));case 5:case"end":return e.stop()}var a,i},e,this)}));return function(t){return e.apply(this,arguments)}}())},setProject:function(t){e(function(e){return{type:m,project:e}}(t))},setCurrentSlide:function(t){e(function(e){return{type:p,slide:e}}(t))}}})(ne);r.a.render(i.a.createElement(l.a,{store:M},i.a.createElement(ie,null)),document.getElementById("root"))}},[[28,1,2]]]);
//# sourceMappingURL=main.8b953a85.chunk.js.map