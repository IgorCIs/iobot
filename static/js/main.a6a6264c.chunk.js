(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{27:function(e,t,n){var i=n(1);e.exports=function(e){var t=this;this.object=e,this.object.rotation.reorder("YXZ"),this.enabled=!0,this.deviceOrientation={},this.screenOrientation=0,this.alpha=0,this.alphaOffsetAngle=0;var n=function(e){t.deviceOrientation=e},a=function(){t.screenOrientation=window.orientation||0},o=function(){var e=new i.Vector3(0,0,1),t=new i.Euler,n=new i.Quaternion,a=new i.Quaternion(-Math.sqrt(.5),0,0,Math.sqrt(.5));return function(i,o,r,l,s){t.set(r,o,-l,"YXZ"),i.setFromEuler(t),i.multiply(a),i.multiply(n.setFromAxisAngle(e,-s))}}();this.connect=function(){a(),window.addEventListener("orientationchange",a,!1),window.addEventListener("deviceorientation",n,!1),t.enabled=!0},this.disconnect=function(){window.removeEventListener("orientationchange",a,!1),window.removeEventListener("deviceorientation",n,!1),t.enabled=!1},this.update=function(){if(!1!==t.enabled){t.deviceOrientation.alpha&&(i.Math.degToRad(t.deviceOrientation.alpha),this.alphaOffsetAngle);var e=t.deviceOrientation.beta?i.Math.degToRad(t.deviceOrientation.beta):0,n=t.deviceOrientation.gamma?i.Math.degToRad(t.deviceOrientation.gamma):0,a=t.screenOrientation?i.Math.degToRad(t.screenOrientation):0;if(a){a=0;var r=[n,e];e=r[0],n=r[1]}o(t.object.quaternion,0,e,n,a),this.alpha=0}},this.updateAlphaOffsetAngle=function(e){this.alphaOffsetAngle=e,this.update()},this.dispose=function(){this.disconnect()},this.connect()}},29:function(e,t,n){e.exports=n(45)},30:function(e,t,n){},45:function(e,t,n){"use strict";n.r(t);n(30);var i=n(0),a=n.n(i),o=n(13),r=n.n(o),l=n(14),s=n(9),c=n(23),u=n(8),d="SET_SECTION",h="SET_DATA",f="FETCH_DATA_REQUEST",m="FETCH_DATA_FAIL",v="FETCH_DATA_SUCESS",p="SET_PROJECT_SLIDE",y={currentSection:1},g=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:y,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case d:return Object(u.a)({},e,{currentSection:t.section});default:return e}},b={data:null,loading:!1,active:null,error:null},x=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:b,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case f:return Object(u.a)({},e,{loading:!0,error:null,data:null});case v:return Object(u.a)({},e,{loading:!1,error:!1,data:t.payload.data});case m:return Object(u.a)({},e,{loading:!1,error:t.payload.error,data:null});default:return e}},S={active:0,activeSlide:0},P=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:S,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case h:return Object(u.a)({},e,{active:t.project,activeSlide:0});case p:return Object(u.a)({},e,{activeSlide:t.slide});default:return e}},E=Object(s.combineReducers)({sections:g,data:x,projects:P}),M=n(24),L=Object(s.createStore)(E,Object(c.composeWithDevTools)(Object(s.applyMiddleware)(M.a))),A=n(2),w=n(3),j=n(5),O=n(4),k=n(6),C=n(7),z=n(25),F=n.n(z);n(41),n(42);function I(e,t,n,i){e&&t.forEach(function(e){e&&function(e,t,n,i){var a=e;function o(){!i&&a.classList.remove("animated"),!i&&a.classList.remove(t),"function"===typeof n&&n()}a.classList.add("animated",t),a.addEventListener("animationend",function(){return o()},!1),a.addEventListener("webkitAnimationEnd",function(){return o()},!1),a.addEventListener("webkitanimationend",function(){return o()},!1),a.addEventListener("animationend",function(){return o()},!1),a.addEventListener("animationiteration",function(){return setTimeout(function(){return o()},500)},!1)}(e,e.dataset.animation,n,i)})}var N=n(1),T=n(26);var _,D=function(){function e(t){Object(A.a)(this,e),this.config=t,this.onBeforeRenderConfig={},this.shaderForMaterial=null,this.shaderMaterial=null,this.meshMaterial=[],this.shaderGeometry=null,this.shaderMesh=null,this.shaderMesh2=null,this.camera=null,this.raycaster=new N.Raycaster,this.mouseXY=new N.Vector2,this.mouseLastUpdate=Date.now(),this.mouseStandByAction=!1,this.mouseStandByPosition=!1,this.mouseOldestPosition=new N.Vector2,this.mouseHistory=[],this.mouseHistoryMax=12;for(var n=0;n<this.mouseHistoryMax;n++)this.mouseHistory.push(new N.Vector2);this.animationFuntction=function(){},this.init()}return Object(w.a)(e,[{key:"init",value:function(){var e=this;this.shaderForMaterial=function(e){var t=e.pathCount;return{uniforms:{eye:{value:new N.Vector3},raycastPoint:{value:new N.Vector3},raycastedPoints:{value:[new N.Vector3]},sunDirection:{value:new N.Vector3},maxDistance:{value:4},pointSize:{value:8},timeScaleFactor:{value:.003},uvScaleFactor:{value:.003},sizeFactor:{value:3.2},alpha:{value:.2},lines:{value:20},time:{value:0},size:{value:122.3},textureMatrix:{value:new N.Matrix4}},vertexShader:"\n            uniform float sizeFactor;\n            uniform float uvScaleFactor;\n            uniform float timeScaleFactor;\n            uniform float pointSize;\n            \n            uniform mat4 textureMatrix;\n            uniform float maxDistance;\n            uniform float time;\n            uniform float alpha;\n            uniform vec3 eye;\n            \n            varying vec4 worldPosition;\n            \n            varying vec2 vUv;\n            varying vec4 vColor;\n            varying float distanceToMouseAlpha;\n            varying float distanceToRaycastPoint;\n            \n            float PI = 3.141592653589793;\n            \n            uniform vec3 raycastPoint;\n            uniform vec3 raycastedPoints[ ".concat(t," ];\n            const float pathCount = ").concat(t,".0; \n            const int pathCountInt = ").concat(t,"; \n            \n            float distanceBetweenVec3( vec3 v1, vec3 v2 ){\n                float dx = v1.x - v2.x;\n                float dy = v1.y - v2.y;\n                float dz = v1.z - v2.z;\n                float result = sqrt( dx * dx + dy * dy + dz * dz );\n                return result;\n            }\n            \n            vec3 convertToNormal( vec3 src ){\n                return vec3( ( 0.5 - src.x ) * 2.0, ( 0.5 - src.y ) * 2.0, ( 0.5 - src.z ) * 2.0 );\n            }\n            \n            float getMod( float a, float b ) {\n                float result =  a - ( b * floor( a / b ) );\n                return result;\n            }\n            \n            vec4 getMixedColor( sampler2D tex1, sampler2D tex2, vec2 _uv ){\n                    vec4 mixedColor = ( texture2D( tex1, _uv ) + texture2D( tex2, _uv ) ) * 0.5;\n                    return mixedColor;\n            }\n            \n            \n            vec3 lt_ln_to_xyz( float lt, float ln, float radius ){\n                vec3 resultXYZ = vec3(\n                    radius * cos(lt) * cos(ln),\n                    radius * cos(lt) * sin(ln),\n                    radius * sin(lt)\n                );\n                return resultXYZ;\n            }\n            \n            vec2 xyz_to_lt_ln( vec3 pos ){\n                return vec2( \n                    acos( pos.y / sqrt( pos.x * pos.x + pos.z * pos.z) ), \n                    atan( pos.x / pos.z ) \n                );\n            }\n            \n            vec3 slerp(vec3 start, vec3 end, float t) {  \n                    // Dot product - the cosine of the angle between 2 vectors.  \n                    float dot = dot(start, end);\n                    // Clamp it to be in the range of Acos() \n                    // This may be unnecessary, but floating point  \n                    // precision can be a fickle mistress.    \n                    dot = clamp(dot, -1.0, 1.0);  \n                    // Acos(dot) returns the angle between start and end,   \n                    // And multiplying that by time returns the angle between   \n                    // start and the final result.   \n                    float theta = acos(dot) * t;\n                    vec3 RelativeVec = normalize(end - start * dot); \n                    return ((start * cos(theta)) + (RelativeVec * sin(theta)));\n            }\n            \n            vec3 aproximatedRaycastedPoint(){\n            \n                vec3 finalPoint = vec3( 0.0 );\n                \n                float floatIterator = 0.0;\n                float totalMultiplyFactor = 0.0;\n                \n                for( int i = 0; i < pathCountInt; i++ ){\n                    float nextMultiplyFactor = ( floatIterator / pathCount );\n                    totalMultiplyFactor += nextMultiplyFactor;\n                    finalPoint += raycastedPoints[ i ] * nextMultiplyFactor;\n                    floatIterator += 1.0;\n                }\n                finalPoint = finalPoint / totalMultiplyFactor;\n                return finalPoint;\n            }\n            \n            vec4 getNearestRaycastedPoint( vec3 position ){\n                vec4 finalPoint = vec4( 0.0 );\n                float lastDistance = 99999999999.0;\n                for( int i = 0; i < pathCountInt; i++ ){\n                    float nextDistance = distanceBetweenVec3( position.xyz , raycastedPoints[ i ] );\n                    if( nextDistance < lastDistance ){\n                        lastDistance = nextDistance;\n                        finalPoint =  vec4( raycastedPoints[ i ], abs( sin( float( i ) / pathCount * -PI / 2.0 ) ) );\n                    }\n                }\n                return finalPoint;\n            }\n            \n            vec2 getLatLngMod( float latFactor, float lngFactor ){\n                return vec2( getMod(  latFactor,  PI * 2.0  ), -PI/ 2.0 + sin( getMod( lngFactor,  PI  ) ) * PI  );\n            }\n            \n            void main() {\n            \n            \tvUv = uv;\n            \t\n                vec3 normaledEye = normalize( eye );\n            \t\n            \tvec4 pixelPosition = modelMatrix * vec4( position, 1.0 );\n            \tvec4 mvStartPosition = pixelPosition;\n            \tworldPosition = pixelPosition;\n            \t\n            \tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n            \tvec4 tempNearest = getNearestRaycastedPoint( pixelPosition.xyz );\n            \ttempNearest.x = -50.0 + 100.0 * sin( PI/2.0  * getMod( time * timeScaleFactor, 1.0 ) );\n            \tvec4 nearestRaycasted = vec4(\n            \t    tempNearest.x - pixelPosition.y,\n            \t    pixelPosition.y,\n            \t    0.0,\n            \t    0.001\n            \t);\n            \tvec3 _raycastPoint = nearestRaycasted.xyz;\n            \tvec3 flatPixelPosition = vec3( pixelPosition.xy, 0.0 );\n            \tdistanceToRaycastPoint = distanceBetweenVec3( flatPixelPosition.xyz , _raycastPoint );\n            \n                float distanceFactor;\n                vec4 finalGlPosition;\n            \n                float distanceAlpha = 1.0 - distanceToRaycastPoint / maxDistance;\n                distanceFactor = distanceAlpha;\n                distanceToMouseAlpha = distanceAlpha;\n                float timeScaleFactorAfter = timeScaleFactor * 0.7;\n                float pixelPScaleFactor = 0.2;\n                \n                float multiplyFactorForRaycastedPath = 1.0;\n                if( distanceFactor < 0.12 ){\n                    distanceFactor = 0.12;\n                    timeScaleFactorAfter = timeScaleFactor;\n                    pixelPScaleFactor = 0.2;\n                } else {\n                    distanceFactor = 0.12 + (distanceFactor - 0.12) * 0.3;\n                    timeScaleFactorAfter = timeScaleFactor;\n                    pixelPScaleFactor = 0.3;\n                }\n                \n                vec2 currentLtLn = xyz_to_lt_ln(  vec3( 1.0, 1.0, 0.0 ) );\n                \n                float ltFactor = ( position.x + position.z );\n                float lnFactor = ( position.z - position.y );\n                \n                currentLtLn = getLatLngMod(\n                    currentLtLn.x + ltFactor * pixelPScaleFactor + ( time * timeScaleFactorAfter * 0.5 ) * PI * 2.0,\n                    currentLtLn.y + lnFactor * pixelPScaleFactor + ( time * timeScaleFactorAfter ) *  PI\n                );\n                \n                vec3 positionOfLtLn_default = lt_ln_to_xyz( \n                    currentLtLn.x, \n                    currentLtLn.y, \n                    distanceFactor * 2.5 * multiplyFactorForRaycastedPath\n                );\n                \n                vec3 positionOfLtLn_for_pointer = lt_ln_to_xyz( \n                    currentLtLn.x, currentLtLn.y, \n                    distanceFactor * 2.5 * abs( sin( time * timeScaleFactor ) )\n                );\n                \n                vec3 positionOfLtLn;\n                \n                if( distanceFactor > 0.05 ){\n                    float clipFactor = 0.0;\n                    float softFactor = 0.35;\n                    float test1 = ( distanceFactor - clipFactor ) * softFactor;\n                    float test2 = 0.0;\n                    if( test1 > 0.0 ){  test2 = sin( ( test1 ) * 2.0 * PI / 2.0 ); }\n                    positionOfLtLn = slerp( positionOfLtLn_default, positionOfLtLn_default, test2 );\n                } else {\n                    positionOfLtLn = positionOfLtLn_default;\n                }\n                \n                pixelPosition.xyz += positionOfLtLn;\n                vec4 preGlPosition =  projectionMatrix * modelViewMatrix * pixelPosition;\n                finalGlPosition = preGlPosition;\n                    \n                gl_Position =  finalGlPosition;\n                vColor = normalize( finalGlPosition );\n                \n                if ( gl_Position.w > 0.0 ) {\n                    gl_PointSize = 12.0 * pointSize / gl_Position.w + ( pointSize * distanceFactor * 0.5 );\n                    if( distanceFactor > 0.12 ){\n                        gl_PointSize = gl_PointSize + 4.0 * ( distanceFactor * 3.0 );\n                    }\n                } else {\n                    gl_PointSize = 3.0;\n                }\n                \n            }\n        "),fragmentShader:"\n            uniform float alpha;\n            uniform float lines;\n            uniform float time;\n            uniform float size;\n            uniform vec3 eye;\n            uniform vec3 sunDirection;\n            uniform float timeScaleFactor;\n\n            varying vec4 worldPosition;\n            varying vec2 vUv;\n            varying vec4 vColor;\n            varying float distanceToMouseAlpha;\n            varying float distanceToRaycastPoint;\n            \n           \n            const float gridSize = 3.0;\n            const float pixelsPerUnit = 32.0;\n            const vec2 resolution = vec2( 1024.0, 1024.0 );\n            \n            const vec3 tinLineColor = vec3( 1.0, 1.0, 1.0 );\n            const vec3 wideLineColor = vec3( 1.0, 1.0, 0.6 );\n            \n            const float tinLineWidth = 32.0;\n            const float wideLineWidth = 12.0;\n            \n            const float tinLineOpacity = 1.0;\n            const float wideLineOpacity = 1.0;\n            \n            float PI = 3.141592653589793;\n     \n            float getTimeLineWidthScale(){\n                // return ( tinLineWidth / 2.0 ) + abs( sin( time * 0.13 ) * tinLineWidth );\n                return tinLineWidth;\n            }\n     \n            float getMod( float a, float b ) {\n                float result =  a - ( b * floor( a / b ) );\n                return result;\n            }\n            \n            bool checkIsLine(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n            \n                bool lineAvailableX = gridAlphaModLeft.x < lineAlphaSize.x;\n                // bool lineAvailableX = false;\n                bool lineAvailableY = false;\n                // bool lineAvailableY = gridAlphaModLeft.y < lineAlphaSize.y;\n            \n                return lineAvailableX || lineAvailableY || false;\n            }\n            \n            bool checkIsLine2(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n            \n                bool lineAvailableX = gridAlphaModLeft.x < lineAlphaSize.x;\n                bool lineAvailableY = gridAlphaModLeft.y < lineAlphaSize.y;\n            \n                return lineAvailableX || lineAvailableY || false;\n            }\n            \n            bool checkIsPoint(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n            \n                bool lineAvailableX = gridAlphaModLeft.x < lineAlphaSize.x;\n                bool lineAvailableY = gridAlphaModLeft.y < lineAlphaSize.y;\n            \n                return  ( lineAvailableX && lineAvailableY ) || false;\n            }\n            \n            float checkLineOpacityByX(){\n            \n                // resolution in pixels\n                vec2 resInPix = vec2( resolution.x * pixelsPerUnit, resolution.y * pixelsPerUnit );\n                \n                // line alpha size\n                vec2 lineAlphaSize = vec2( getTimeLineWidthScale() / resInPix.x, getTimeLineWidthScale() / resInPix.y );\n                vec2 gridAlphaSize = vec2( 1.0 / ( resolution.x / gridSize ), 1.0 / ( resolution.y / gridSize ) );\n            \n                vec2 gridAlphaModLeft = vec2(\n                    getMod( vUv.x + ( lineAlphaSize.x * .5 ), gridAlphaSize.x ),\n                    getMod( vUv.y + ( lineAlphaSize.y * .5 ), gridAlphaSize.y )\n                );\n                \n                float nextOpacity = sin( gridAlphaModLeft.x / lineAlphaSize.x * 3.14 );\n                return nextOpacity;\n            }\n            \n            bool checkIsCenter(){\n            \n                bool isCenterX = abs(\n                   ( vUv.x * resolution.x * pixelsPerUnit ) - ( 0.5 * resolution.x * pixelsPerUnit )\n                ) < ( wideLineWidth * .5 );\n            \n                bool isCenterY = abs(\n                    ( vUv.y * resolution.y * pixelsPerUnit ) - ( 0.5 * resolution.y * pixelsPerUnit )\n                ) < ( wideLineWidth * .5 );\n            \n                if( isCenterX ){\n                    return true;\n                } else if( isCenterY ) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n     \n            vec4 getMixedColor( sampler2D tex1, sampler2D tex2, vec2 _uv ){\n                    vec4 mixedColor = ( texture2D( tex1, _uv ) + texture2D( tex2, _uv ) ) * 0.5;\n                    return mixedColor;\n            }\n            \n            highp float distanceBetween( vec2 vector1, vec2 vector2 ){\n                float xLength = vector1.x - vector2.x;\n                float yLength = vector1.y - vector2.y;\n                return sqrt( xLength * xLength + yLength * yLength );\n            }\n            \n            float distanceToLine(vec2 p1, vec2 p2, vec2 point) {\n                float a = p1.y-p2.y;\n                float b = p2.x-p1.x;\n                return abs(a*point.x+b*point.y+p1.x*p2.y-p2.x*p1.y) / sqrt(a*a+b*b);\n            }\n            \n            float drawLine(vec2 p1, vec2 p2) {\n            \n              vec2 resolution = vec2( 1024., 1024. );\n              float Thickness = 15.0;\n              \n              vec2 uv = gl_FragCoord.xy / resolution.xy;\n            \n              float a = abs(distanceBetween(p1, uv));\n              float b = abs(distanceBetween(p2, uv));\n              float c = abs(distanceBetween(p1, p2));\n            \n              if ( a >= c || b >=  c ) return 0.0;\n            \n              float p = (a + b + c) * 0.5;\n            \n              // median to (p1, p2) vector\n              float h = 2. / c * sqrt( p * ( p - a) * ( p - b) * ( p - c));\n            \n              return mix( 1.0, .0, smoothstep( 0.5 * Thickness, 1.5 * Thickness, h ) );\n            }\n            \n            void main() {\n            \n                vec2 pc = ( gl_PointCoord - 0.5 ) * 2.0;\n                vec4 color1 = vColor;\n                \n                float r = 0.0, delta = 0.0, alpha = 1.0;\n                vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n                r = dot(cxy, cxy);\n                if ( r > 1.0 ) { discard; }\n            \n                color1.xyz = vec3( 0.7 );\n                \n                // float transparentFactor = 1. - r;\n                float transparentFactor = 1.;\n                color1.a = transparentFactor;\n                color1.xyz *= 0.9 + 0.1 * r;\n                \n                vec4 color2 = vec4( 1.0, 0.0, 0.0, 1.0 );\n                \n                if( distanceToMouseAlpha < 0.0 ){\n                    gl_FragColor = color1;\n                } else {\n                    gl_FragColor = color2;\n                }\n\n                // gl_FragColor = vec4( 1.0 ); \n            }\n        "}}({pathCount:this.config.pathCount}),this.shaderForMaterial.uniforms.lines.value=3,this.shaderForMaterial.uniforms.time.value=0,this.shaderForMaterial.uniforms.timeScaleFactor.value=.003;for(var t=[],n=0;n<this.config.pathCount;n++)t.push(new N.Vector3);this.shaderForMaterial.uniforms.raycastedPoints.value=t,this.shaderMaterial=new N.ShaderMaterial({uniforms:this.shaderForMaterial.uniforms,vertexShader:this.shaderForMaterial.vertexShader,fragmentShader:this.shaderForMaterial.fragmentShader,transparent:!0,side:N.BackSide}),this.shaderGeometry=new N.BufferGeometry;var i=[],a=!0,o=!1,r=void 0;try{for(var l,s=this.config.vertices[Symbol.iterator]();!(a=(l=s.next()).done);a=!0){var c=l.value;i.push(c.x),i.push(c.y),i.push(c.z)}}catch(d){o=!0,r=d}finally{try{a||null==s.return||s.return()}finally{if(o)throw r}}var u=new Float32Array(i);this.shaderGeometry.addAttribute("position",new N.BufferAttribute(u,3)),this.shaderMesh=new N.Points(this.shaderGeometry,this.shaderMaterial),this.initAnimationProperties(),this.shaderMesh.onBeforeRender=function(t,n,i,a,o,r){e.config.onBeforeRender&&e.config.onBeforeRender(t,n,i,a,o,r),e.onBeforeRenderConfig={renderer:t,scene:n,camera:i,geometry:a,material:o,group:r}}}},{key:"animate",value:function(){this.onBeforeRenderConfig.camera&&(this.camera=this.onBeforeRenderConfig.camera,this.animationFuntction(),this.shaderMaterial.uniforms.eye.value=this.camera.position.clone(),this.shaderMaterial.uniforms.time.value+=1,this.shaderMaterial.needsUpdate=!0)}},{key:"initAnimationProperties",value:function(){for(var e=this,t=[],n=0;n<this.config.pathCount;n++)t.push(new N.Vector3);this.shaderMaterial.uniforms.raycastedPoints.value=t,this.animationFuntction=function(){Date.now()>e.mouseLastUpdate+3300&&(e.mouseStandByAction=!0),e.mouseStandByAction&&(e.mouseStandByPosition=e.mouseStandByPosition+1<e.mouseHistoryMax?e.mouseStandByPosition+1:0,e.useUpdateMouseAction(e.mouseHistory[e.mouseStandByPosition]))}}},{key:"remove",value:function(){this.shaderMesh.parent.remove(this.shaderMesh),this.shaderMesh.geometry.dispose(),this.shaderMesh.material.dispose(),this.shaderMaterial.dispose(),this.shaderGeometry.dispose(),this.shaderMaterial=null,this.shaderGeometry=null}},{key:"raycastModel",value:function(){return this.raycaster.setFromCamera(this.mouseXY,this.camera),this.raycaster.intersectObject(this.shaderMesh)}},{key:"useUpdateMouseAction",value:function(e){this.mouseXY.copy(e)}},{key:"updateMouseNormal",value:function(e){if(this.mouseLastUpdate=Date.now(),this.mouseStandByAction=!1,this.mouseStandByPosition=0,this.mouseHistory.push(e.clone()),this.mouseHistory.length>this.mouseHistoryMax){var t=this.mouseHistory.shift();this.mouseOldestPosition.copy(t)}this.useUpdateMouseAction(e)}}]),e}(),R=n(27),U=n.n(R),B=n(10),H=n.n(B),W=function(){function e(t,n,i,a,o){var r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:30;Object(A.a)(this,e),this.cameraPositionZ=r,this.minimalNormalSize=400,this.initialModels=a,this.sceneElement=t,this.onLoad=n,this.activeProject=o,this.MainScene=new N.Scene,this.camera=new N.PerspectiveCamera(60,this.sceneElement.offsetWidth/this.sceneElement.offsetHeight,.1,1e3),this.renderer=new N.WebGLRenderer({alpha:!i}),this.camera.position.set(0,0,r),i&&this.setColor(i),this.cameraHolder=new N.Object3D,this.cameraHolder.add(this.camera),this.renderer.setPixelRatio(window.devicePixelRatio),this.sceneElement.appendChild(this.renderer.domElement),this.renderer.setSize(this.sceneElement.offsetWidth,this.sceneElement.offsetHeight),this.mouseNormal=new N.Vector2,this.render(),this.MainScene.add(this.cameraHolder),this.MeshControllers=[],this.enabled=!0,this.initMouse(),this.loadModel(this.initialModels[0],n),this.initResizer(),this.initDeviceOrientation(),this.initialDeviceOrientationPosition=null}return Object(w.a)(e,[{key:"initDeviceOrientation",value:function(){var e=this;window.addEventListener("deviceorientation",function(t){e.initialDeviceOrientationPosition||(e.initialDeviceOrientationPosition=t)})}},{key:"initResizer",value:function(){var e=this;window.addEventListener("resize",function(){setTimeout(function(){e.renderer.setSize(e.sceneElement.offsetWidth,e.sceneElement.offsetHeight),e.camera.aspect=e.sceneElement.offsetWidth/e.sceneElement.offsetHeight,e.camera.updateProjectionMatrix();var t=Math.min(e.sceneElement.offsetWidth,e.sceneElement.offsetHeight);t<e.minimalNormalSize&&(e.camera.position.z=e.cameraPositionZ+e.cameraPositionZ*(1-t/e.minimalNormalSize))},50)})}},{key:"setColor",value:function(e){this.renderer.setClearColor(e)}},{key:"loadModel",value:function(e,t){var n=this;return this.clearAllMeshControllers(),new Promise(function(i,a){n.obj_loader=new T.OBJLoader,n.obj_loader.load(e,function(e){var a=[],o=(new N.Vector3).fromArray([0,0,0]),r=(new N.Box3).expandByObject(e).getBoundingSphere(new N.Sphere),l=22.465094820192128/r.radius,s=o.sub(r.center);e.traverse(function(e){if(e.isMesh&&e.geometry&&"BufferGeometry"===e.geometry.type){var t=(new N.Geometry).fromBufferGeometry(e.geometry);a=a.concat(t.vertices)}});var c=!0,u=!1,d=void 0;try{for(var h,f=a[Symbol.iterator]();!(c=(h=f.next()).done);c=!0){var m=h.value;m.multiplyScalar(l),m.add(s),m.y+=11.232547410096064}}catch(v){u=!0,d=v}finally{try{c||null==f.return||f.return()}finally{if(u)throw d}}n.initShader(a,t),i(a)})})}},{key:"initShader",value:function(e,t){this.modelGeometry=e;var n=new D({pathCount:1,vertices:this.modelGeometry});n.shaderGeometry.rotateX(-Math.PI/2),this.MainScene.add(n.shaderMesh),H()()&&(n.deviceOrientControll=new U.a(new N.Object3D)),n.defaultQ=n.shaderMesh.quaternion.clone(),this.MeshControllers.push(n),setTimeout(function(){return t(!0)},1e3)}},{key:"clearAllMeshControllers",value:function(){var e=!0,t=!1,n=void 0;try{for(var i,a=this.MeshControllers[Symbol.iterator]();!(e=(i=a.next()).done);e=!0){i.value.remove()}}catch(o){t=!0,n=o}finally{try{e||null==a.return||a.return()}finally{if(t)throw n}}this.MeshControllers=[],this.modelGeometry=[]}},{key:"renderAction",value:function(){this.renderer.render(this.MainScene,this.camera);var e=!0,t=!1,n=void 0;try{for(var i,a=this.MeshControllers[Symbol.iterator]();!(e=(i=a.next()).done);e=!0){var o=i.value;o.deviceOrientControll&&(o.deviceOrientControll.update(),o.shaderMesh.quaternion.copy(o.defaultQ.clone().slerp(o.deviceOrientControll.object.quaternion.clone(),.15))),o.updateMouseNormal(this.mouseNormal),o.animate();var r=function(e,t){return Math.sin(Math.PI/2*(e+t))},l=Math.PI/2;this.cameraHolder.rotation.x=r(o.mouseOldestPosition.y,0)*l*.05-.2,this.cameraHolder.rotation.y=-r(o.mouseOldestPosition.x,0)*l*.1}}catch(s){t=!0,n=s}finally{try{e||null==a.return||a.return()}finally{if(t)throw n}}}},{key:"render",value:function(){var e=this;requestAnimationFrame(function(){return e.render()}),this.enabled&&this.renderAction()}},{key:"initMouse",value:function(){var e=this;H()()||document.body.addEventListener("mousemove",function(t){if(e.enabled){var n={x:t.pageX,y:t.pageY},i={w:e.sceneElement.offsetWidth,h:e.sceneElement.offsetHeight},a=new N.Vector2(n.x/i.w*2-1,1-n.y/i.h*2);e.mouseNormal.copy(a)}})}}]),e}(),V=function(e){function t(){var e,n;Object(A.a)(this,t);for(var i=arguments.length,a=new Array(i),o=0;o<i;o++)a[o]=arguments[o];return(n=Object(j.a)(this,(e=Object(O.a)(t)).call.apply(e,[this].concat(a)))).elements=[],n}return Object(k.a)(t,e),Object(w.a)(t,[{key:"componentDidMount",value:function(){var e=this.props,t=e.data,n=e.onLoad;this.viewer=new W(this._canvas,function(){return n(!0)},null,[t.model])}},{key:"render",value:function(){var e=this,t=this.props,n=t.data,i=t.active,o=t.setSection,r=t.aboutSectionId;return I(i,this.elements),this.viewer&&(this.viewer.enabled=!!i),a.a.createElement("div",{className:"home fp-noscroll section",id:"home"},a.a.createElement("div",{style:{backgroundColor:n.color},ref:function(t){return e._canvas=t},id:"homescene",className:"scene"}," "),a.a.createElement("div",{ref:function(t){return e.elements.push(t)},"data-animation":"fadeInRight",className:"title"},a.a.createElement("div",null,"My name is ",a.a.createElement("span",{onClick:function(){return o(r)}},"Kuba"),", ",a.a.createElement("br",null),"I do cool sh*t & ",a.a.createElement("br",null)," this is my ",a.a.createElement("span",{onClick:function(){return o(2)}}," book "))),a.a.createElement("div",{className:"contacts"},a.a.createElement("div",{className:"wrapper"},a.a.createElement("div",{className:"email"},a.a.createElement("a",{className:"fadeInUp","data-animation":"fadeInUp",ref:function(t){return e.elements.push(t)},href:"mailto:".concat(n.links.email)}," ",n.links.email," ")),a.a.createElement("div",{className:"phone"},a.a.createElement("a",{className:"fadeInUp","data-animation":"fadeInUp",ref:function(t){return e.elements.push(t)},href:"tel:".concat(n.links.mobile)}," ",n.links.mobile," ")))))}}]),t}(i.PureComponent),G=function(){return a.a.createElement("div",{className:"".concat(H()()?"mobile":""," animated fadeInLeft logo")})},X=function(e){function t(){var e,n;Object(A.a)(this,t);for(var i=arguments.length,a=new Array(i),o=0;o<i;o++)a[o]=arguments[o];return(n=Object(j.a)(this,(e=Object(O.a)(t)).call.apply(e,[this].concat(a)))).state={closed:!0},n.toggle=function(){n.setState(function(e){return{closed:!e.closed}})},n.scrollTo=function(e){n.toggle(),n.props.onClick(e)},n.scrollToProject=function(e){n.toggle(),n.props.setProject(e),n.props.onClick(e+2),setTimeout(function(){n.props.onClick(e+2),n.props.setProject(e)},0)},n}return Object(k.a)(t,e),Object(w.a)(t,[{key:"render",value:function(){var e=this.state.closed,t=this.scrollTo,n=this.toggle,i=this.scrollToProject,o=this.props,r=o.active,l=o.projectsData;return a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"navbar ".concat(e?"closed":"")},a.a.createElement("div",{className:"".concat(H()()?"mobile":""," navbar-logo")}," "),a.a.createElement("div",{className:"menu"},a.a.createElement("div",{className:"item ".concat(1===r?"active":""),onClick:function(){return t(1)}}," Start "),l.map(function(e,t){return a.a.createElement("div",{key:t,onClick:function(){return i(t)},className:"item ".concat(r===t+2?"active":"")}," ",e.title," ")}),a.a.createElement("div",{className:"item ".concat(r===l.length+2?"active":""),onClick:function(){return t(l.length+2)}}," About me "))),a.a.createElement("div",{onClick:n,className:"burger animated fadeInRight ".concat(e?"":"active")},a.a.createElement("div",null),a.a.createElement("div",null),a.a.createElement("div",null)))}}]),t}(i.PureComponent),Y=function(e){function t(){var e,n;Object(A.a)(this,t);for(var i=arguments.length,a=new Array(i),o=0;o<i;o++)a[o]=arguments[o];return(n=Object(j.a)(this,(e=Object(O.a)(t)).call.apply(e,[this].concat(a)))).elements=[],n}return Object(k.a)(t,e),Object(w.a)(t,[{key:"render",value:function(){var e=this,t=this.props,n=t.data;return I(t.active,this.elements),a.a.createElement("div",{className:"thanks fp-noscroll section"},a.a.createElement("div",{className:"title",ref:function(t){return e.elements.push(t)},"data-animation":"fadeInRight"}," ",n.title," "),a.a.createElement("div",{className:"email",ref:function(t){return e.elements.push(t)},"data-animation":"fadeInLeft"},a.a.createElement("a",{href:"mailto:".concat(n.links.email," ")}," ",n.links.email," ")),a.a.createElement("div",{className:"phone",ref:function(t){return e.elements.push(t)},"data-animation":"fadeInRight"},a.a.createElement("a",{href:"tel:".concat(n.links.mobile," ")}," ",n.links.mobile," ")),a.a.createElement("div",{className:"footer"},a.a.createElement("div",{className:"subtitle",ref:function(t){return e.elements.push(t)},"data-animation":"flipInX"}," ",n.subtitle," "),a.a.createElement("div",{className:"contacts"},a.a.createElement("div",{className:"back",ref:function(t){return e.elements.push(t)},"data-animation":"fadeInUp",onClick:function(){return e.props.onClick()}}," go back up "))))}}]),t}(i.Component),q=[],Z=function(e){var t=e.data;return I(e.active,q),a.a.createElement("div",{className:"about section"},a.a.createElement("div",{className:"wrapper"},a.a.createElement("div",{className:"title","data-animation":"fadeInRight",ref:function(e){return q.push(e)}}," ",t.title," "),a.a.createElement("div",{className:"subtitle","data-animation":"fadeInRight",ref:function(e){return q.push(e)}}," ",t.subtitle," "),a.a.createElement("div",{className:"description"},a.a.createElement("div",{className:"item"},a.a.createElement("div",{className:"description-title","data-animation":"fadeInRight",ref:function(e){return q.push(e)}}," ",t.text.column1.title," "),a.a.createElement("div",{className:"text","data-animation":"fadeInRight",ref:function(e){return q.push(e)}},t.text.column1.paragraphs.map(function(e,t){return a.a.createElement("div",{key:t}," ",e," ")})),a.a.createElement("div",{className:"button mdn","data-animation":"fadeInRight",ref:function(e){return q.push(e)}},a.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:t.cvLink}," Download full cv (pdf) "))),a.a.createElement("div",{className:"item"},a.a.createElement("div",{className:"description-title","data-animation":"fadeInRight",ref:function(e){return q.push(e)}}," ",t.text.column2.title," "),a.a.createElement("div",{className:"text","data-animation":"fadeInRight",ref:function(e){return q.push(e)}},t.text.column2.paragraphs.map(function(e,t){return a.a.createElement("div",{key:t}," ",e," ")}),a.a.createElement("div",{className:"button mdb","data-animation":"fadeInRight",ref:function(e){return q.push(e)}},a.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:t.cvLink}," Download full cv (pdf) ")))))))},Q=n(15),J=function(e){function t(){return Object(A.a)(this,t),Object(j.a)(this,Object(O.a)(t).apply(this,arguments))}return Object(k.a)(t,e),Object(w.a)(t,[{key:"render",value:function(){var e=this,t=this.props.pages;return a.a.createElement("div",{className:"pagination"},Object(Q.a)(Array(t)).map(function(t,n){return a.a.createElement("div",{className:"item ".concat(e.props.active===n+1?"active":""),key:n,onClick:function(){return e.props.onClick(n+1)}}," ")}))}}]),t}(i.PureComponent),K=function(e){function t(){var e,n;Object(A.a)(this,t);for(var i=arguments.length,a=new Array(i),o=0;o<i;o++)a[o]=arguments[o];return(n=Object(j.a)(this,(e=Object(O.a)(t)).call.apply(e,[this].concat(a)))).state={openedImage:null,activeSlide:0},n}return Object(k.a)(t,e),Object(w.a)(t,[{key:"componentDidMount",value:function(){this.setViewer()}},{key:"setSlide",value:function(e){var t=this.props,n=t.blockInfinity,i=t.fullpageApi;n(),this.setState({activeSlide:e}),i.moveTo(this.props.section+1,e),n(!1)}},{key:"componentDidUpdate",value:function(){var e=this.props,t=e.data,n=e.slideChanges,i=e.section,a=e.isSectionActive,o=this.state.activeSlide;!!n&&i===n.origin.index&&o!==n.direction.index&&this.setState({activeSlide:n.direction.index}),a||0===o||this.setSlide(0),!t.images[o-1]&this.state.openedImage&&this.setState({openedImage:!1}),a&&0===o&&this.viewer?this.viewer&&(this.viewer.enabled=!0):this.viewer&&(this.viewer.enabled=!1)}},{key:"setViewer",value:function(){setTimeout(function(){},0)}},{key:"render",value:function(){var e=this,t=this.props.data,n=this.props.data,i=n.images,o=n.title,r=n.description,l=this.state,s=l.activeSlide,c=l.openedImage;return a.a.createElement("div",{className:"section fp-noscroll projects",ref:function(t){return e._element=t},"data-slides":"".concat(0===s?"first":"").concat(s===i.length+1?"last":"")},a.a.createElement("div",{className:"slide fp-noscroll"},a.a.createElement("div",{className:"first-slide",style:{background:t["fist-slide-color"]}},a.a.createElement("div",{className:"main-title"}," ",t.title," "),a.a.createElement("div",{ref:function(t){return e._canvas=t},className:"project-scene"}," "))),i.map(function(e,t){return a.a.createElement("div",{key:t,className:"slide fp-noscroll"},a.a.createElement("div",{className:"image-slide",style:{backgroundImage:"url(".concat(e,")")}}))}),a.a.createElement("div",{className:"slide descr-wrapper fp-noscroll",style:{background:t["last-slide-color"]}},a.a.createElement("div",{className:"descr-slide"},a.a.createElement("div",{className:"title","data-animation":"projectsTitle"}," ",o," "),a.a.createElement("div",{className:"descr"},r))),a.a.createElement("div",{className:"pagination-list"},[].concat(Object(Q.a)(i),[")",")"]).map(function(t,n){return a.a.createElement("div",{key:n,onClick:function(){return e.setSlide(n)},className:"item ".concat(s===n?"active":"")},a.a.createElement("div",null))})),0!==s&&s!==i.length+1?a.a.createElement("div",{className:"fit-image",onClick:function(){return e.setState({openedImage:!0})}}):"",c?a.a.createElement("div",{className:"image-popup"},a.a.createElement("div",{className:"image-popup-close",onClick:function(){return e.setState({openedImage:!1})}},a.a.createElement("div",null),a.a.createElement("div",null)),a.a.createElement("img",{src:i[s-1],alt:"project img"})):"")}}]),t}(i.Component),$=function(e){var t=e.data,n=e.fullpageApi,i=e.slideChanges,o=e.active,r=e.blockInfinity;return a.a.createElement(a.a.Fragment,null,t.map(function(e,t){return a.a.createElement(K,{data:e,slideChanges:i,blockInfinity:r,isSectionActive:o===t+2,fullpageApi:n,key:t,section:t+1})}))},ee=function(e){var t=e.loaded,n=e.unMount;return t&&I(t,[_],function(){n()}),a.a.createElement("div",{className:"loader",ref:function(e){return _=e},"data-animation":"fadeOut"},a.a.createElement("div",null))},te=function(e){function t(e){var n;return Object(A.a)(this,t),(n=Object(j.a)(this,Object(O.a)(t).call(this,e))).activeSlide=0,n.blockInfinityScroll=!1,n.state={contentLoaded:!1,homeLoaded:!1},n.blockInfinity=function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];n.blockInfinityScroll=e},n.toggleLoader=function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];n.setState({homeLoaded:e})},n.goToSection=n.goToSection.bind(Object(C.a)(Object(C.a)(n))),n.goToProject=n.goToProject.bind(Object(C.a)(Object(C.a)(n))),n.unMountLoader=n.unMountLoader.bind(Object(C.a)(Object(C.a)(n))),n.scroll=n.scroll.bind(Object(C.a)(Object(C.a)(n))),n.fullpageApi=null,n}return Object(k.a)(t,e),Object(w.a)(t,[{key:"componentDidMount",value:function(){this.props.fetchData()}},{key:"goToSection",value:function(e){this.props.setCurrentSection(e),this.fullpageApi.moveTo(e)}},{key:"goToProject",value:function(e){this.props.setProject(e)}},{key:"unMountLoader",value:function(){this.setState({contentLoaded:!0})}},{key:"scroll",value:function(e){this.props.setCurrentSection(e.index+1)}},{key:"render",value:function(){var e=this,t=this.props,n=t.sections,i=t.setProject,o=t.data,r=t.projects,l=this.goToSection,s=this.state,c=s.contentLoaded,u=s.homeLoaded;return o&&o.title!==document.title&&(document.title=o.title),a.a.createElement(a.a.Fragment,null,u&&c?"":a.a.createElement(ee,{loaded:!!o&&u,unMount:this.unMountLoader}),o?a.a.createElement(a.a.Fragment,null,a.a.createElement(G,null),a.a.createElement(X,{setProject:this.goToProject,projectsData:o.projects,projects:r,onClick:this.goToSection,active:n.currentSection}),a.a.createElement(J,{pages:o.projects.length+3,onClick:function(t){return e.goToSection(t)},active:n.currentSection}),a.a.createElement(F.a,{scrollOverflow:!0,scrollHorizontally:!0,onLeave:function(t,n){e.scroll(n),e.setState({blockSlider:!1})},onSlideLeave:function(t,n,i){return!(n.isFirst&&i.isLast&&!e.blockInfinityScroll)&&(!(n.isLast&&i.isFirst&&!e.blockInfinityScroll)&&void(e.slideChanges={origin:t,destination:n,direction:i}))},render:function(t){var r=t.fullpageApi;return r&&(e.fullpageApi=r),a.a.createElement("div",null,a.a.createElement(V,{data:o.home,aboutSectionId:o.projects.length+2,setSection:l,onLoad:e.toggleLoader,active:1===n.currentSection}),a.a.createElement($,{data:o.projects,blockInfinity:e.blockInfinity,fullpageApi:r,slideChanges:e.slideChanges,isSectionActive:2===n.currentSection,active:n.currentSection,setProject:i}),a.a.createElement(Z,{data:o.about,active:n.currentSection===o.projects.length+2}),a.a.createElement(Y,{data:o.last,onClick:function(e){return l(e)},active:n.currentSection===o.projects.length+3}))}})):"")}}]),t}(i.PureComponent),ne=n(18),ie=n.n(ne),ae=n(28),oe="./data.json",re=Object(l.b)(function(e){return{sections:e.sections,data:e.data.data,projects:e.projects}},function(e){return{setCurrentSection:function(t){e(function(e){return{type:d,section:e}}(t))},fetchData:function(){e(function(){var e=Object(ae.a)(ie.a.mark(function e(t){var n;return ie.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t({type:f}),e.next=3,fetch(oe,void 0).then(function(e){return e.ok?e.json():Promise.reject(e.text())},function(e){return Promise.reject(e)}).then(function(e){return{json:e}},function(e){return{error:e}}).catch(function(e){return console.log({error:e})});case 3:(n=e.sent).json?t((a=n.json,{type:v,payload:{data:a}})):t((i=n.error,{type:m,payload:{error:i}}));case 5:case"end":return e.stop()}var i,a},e,this)}));return function(t){return e.apply(this,arguments)}}())},setProject:function(t){e(function(e){return{type:h,project:e}}(t))},setCurrentSlide:function(t,n){e(function(e,t){return{type:p,project:t,slide:e}}(t,n))}}})(te);r.a.render(a.a.createElement(l.a,{store:L},a.a.createElement(re,null)),document.getElementById("root"))}},[[29,1,2]]]);
//# sourceMappingURL=main.a6a6264c.chunk.js.map